{"version":3,"sources":["components/Scoreboard.js","components/Header.js","components/Gameboard.js","components/Character.js","components/CardWrapper.js","components/Card.js","App.js","components/MemorySort/SortCharacter.js","components/MemorySort/FinishModal.js","components/MemorySort/LostModal.js","components/MemorySort/SortHeader.js","components/MemorySort/Sort.js","RouteSwitch.js","reportWebVitals.js","index.js"],"names":["Scoreboard","props","react_default","a","createElement","className","score","personalBest","Header","data-testid","dist","to","Scoreboard_Scoreboard","Gameboard","Header_Header","Character","src","image","alt","alternative","charHead","CardWrapper","cardsBaseCase","capital","name","key","flag","punc","best","itemClicked","_useState","useState","_useState2","Object","slicedToArray","cards","setCards","cardArray","useEffect","console","log","undefined","randomIndex","arr","toConsumableArray","currentIndex","length","Math","floor","random","_ref","getCountries","tempArr","tempCountry","getCapitals","i","Axios","post","country","then","response","data","setTimeout","catch","error","get","status","includes","push","Fragment","onClick","map","card","Character_Character","concat","Card","clicked","modClicked","_useState3","_useState4","modScore","_useState5","_useState6","modBest","num","App","Card_Card","SortChar","FinishModal","role","id","type","closeModal","aria-label","aria-hidden","restart","SortHeader","newCards","ogOrder","shuffle","winStatus","setWinStatus","lossStatus","setLossStatus","e","data-toggle","data-target","forEach","index","LostModal_FinishModal","MemorySortComponent","setOgOrder","setNewCards","target","nextSibling","classList","remove","add","react_beautiful_dnd_esm","onDragEnd","result","destination","items","Array","from","_items$splice","splice","source","reorderedItem","droppableId","provided","assign","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","RouteSwitch","react_router_dist","path","element","src_App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_RouteSwitch"],"mappings":"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","file":"static/js/main.86891713.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Scoreboard.css';\r\n// This will be a scoreboard for current score/best score and max score we will need to track how many unique characters someone clicks \r\n// To track clicked possibly have a unique id for each card, each click we should check an array for that cards id and either end the game or add id to arr\r\n\r\nexport default function Scoreboard (props){\r\n    // pass on to props some state that tracks your score and the session best should be passed in from the component with all the cards in them \r\n    return(\r\n        <div className='scoreboard'>\r\n            <h4>Score: {props.score}</h4> \r\n            <h4>Personal Best: {props.personalBest}</h4>\r\n            <h4>Max: 12</h4>           \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Scoreboard from './Scoreboard';\r\nimport '../styles/Header.css';\r\n// Simply a header since scoreboard will be here we will need to pass state from another comp into props so we can pass to scoreboard\r\n\r\nexport default function Header (props){\r\n\r\n    return(\r\n        <div className='header'>\r\n            <h2 data-testid=\"home-title\">Memory Game</h2>\r\n            <Link to='/sort'>\r\n                <li>Memory Sort</li>\r\n            </Link>\r\n            <Scoreboard score={props.score} personalBest={props.personalBest} />\r\n        </div>\r\n    )\r\n}","import Header from'./Header';\r\n\r\nimport React from 'react';\r\nexport default function Gameboard(props){\r\n    \r\n    return (\r\n    <div className=\"gameboard\">\r\n        <Header score={props.score} personalBest={props.personalBest} />\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport '../styles/Character.css'\r\n// This function will be the character (image and name) we will nest each one inside styled cards\r\n\r\nexport default function Character (props){\r\n    return(\r\n        <div className='character-wrapper'>\r\n            <div className='image-wrapper'>\r\n                <img className='char-image' src={props.image} alt={props.alternative} />\r\n            </div>\r\n            <div>\r\n                <h3 className='char-header'>{props.charHead}</h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Character from './Character';\r\nimport '../styles/Card.css';\r\nimport Axios from 'axios';\r\n\r\nexport default function CardWrapper(props){\r\n    let cardsBaseCase = [{\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"1\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"2\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"3\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"4\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"5\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"6\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"7\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"8\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"9\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"10\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"11\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"12\",\r\n        flag: \"\",\r\n        punc: ''\r\n    }]\r\n\r\n    const {score, best, itemClicked} = props\r\n    \r\n    const [cards, setCards] = useState(cardsBaseCase)\r\n    let cardArray = [];\r\n    useEffect(() => {\r\n        console.log('useEffect')\r\n        \r\n        if(cardArray !== undefined){\r\n            let arr=[...cards];\r\n            let currentIndex = arr.length,  randomIndex;\r\n\r\n            while (currentIndex !== 0) {\r\n            \r\n                // Pick a remaining element.\r\n                randomIndex = Math.floor(Math.random() * currentIndex);\r\n                currentIndex--;\r\n            \r\n                // And swap it with the current element.\r\n                [arr[currentIndex], arr[randomIndex]] = [\r\n                  arr[randomIndex], arr[currentIndex]];\r\n            }\r\n            setCards(arr)\r\n        }\r\n        console.log('------------------------------')\r\n    },[score, best])\r\n    useEffect(() => {\r\n        console.log('Mount')\r\n        getCountries()\r\n        console.log('------------------------------')\r\n    },[])\r\n    let tempArr = [];\r\n    let tempCountry = [];\r\n    function getCapitals(i) {\r\n        Axios.post('https://countriesnow.space/api/v0.1/countries/capital', {\r\n                \"country\": tempCountry[i].name\r\n            }).then(response => {\r\n                response.data.data.capital ? tempCountry[i].capital = response.data.data.capital :  tempCountry[i].capital = \"No defined capital\";\r\n                tempCountry[i].punc = \",\"\r\n                if (i === tempArr.length - 1){\r\n                    setTimeout(() => {\r\n                        console.log(tempCountry)\r\n                        cardArray = tempCountry\r\n                        setCards(tempCountry)\r\n                    }, 100)\r\n                    \r\n                }\r\n            }).catch(error => {console.log(error)});\r\n    }\r\n    const getCountries = () => {\r\n        setCards(cardsBaseCase)\r\n        Axios.get(\"https://countriesnow.space/api/v0.1/countries/flag/images\").then(\r\n            (response) => {\r\n                if (response.status === 200){\r\n                    tempArr = [];\r\n                    // Get countries name and thier flags\r\n                    for(let i = 0; i < 12; i++){\r\n                        let random = Math.floor(Math.random() * response.data.data.length)\r\n                        if (!tempArr.includes(random)){\r\n                            tempArr.push(random);\r\n                        }\r\n                        \r\n                    }\r\n                    console.log(tempArr)\r\n                    tempCountry = [];\r\n                    for(let i = 0; i < tempArr.length; i++){\r\n                        tempCountry.push(response.data.data[tempArr[i]]);\r\n                        tempCountry[i].key = i;\r\n                        getCapitals(i)\r\n                    }\r\n                }                \r\n            })\r\n            console.log('------------------------------')           \r\n    }\r\n    \r\n    \r\n    \r\n    return (\r\n        <>\r\n        <button onClick={getCountries} className='cust-btn'>Generate countries</button>\r\n        <section className='cards-wrapper'>\r\n            \r\n            {cards.map((card) =>(\r\n                <div className='memory-card' key={card.key} onClick={() => {itemClicked(card.key)}}>\r\n                        <Character  key={card.key} image={ card.flag } alternative={`${card.capital}${card.punc} ${card.name}`} charHead={`${card.capital}${card.punc} ${card.name}`} />\r\n                </div>\r\n                )\r\n            )}\r\n        </section>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport '../styles/Card.css';\r\nimport Gameboard from './Gameboard';\r\nimport CardWrapper from './CardWrapper';\r\n// This function will mostly exist as a compainer that we will nest characters inside and style accordingly\r\n\r\nexport default function Card(props){\r\n    const [clicked, modClicked] = useState([]);\r\n    const [score, modScore] = useState(0)\r\n    const [personalBest, modBest] = useState(0);\r\n    \r\n    const itemClicked = (num) =>{\r\n        \r\n        \r\n        if(!clicked.includes(num)){\r\n            let tempArr = [...clicked]\r\n            tempArr.push(num)\r\n            modClicked(tempArr);\r\n            modScore(score + 1);\r\n        }else{\r\n            modClicked([])\r\n            if(score > personalBest){\r\n                modBest(score);\r\n            }\r\n            modScore(0)\r\n        }\r\n    }\r\n    \r\n    return(\r\n    <>\r\n        <Gameboard score={score} personalBest={personalBest} />\r\n        <div>\r\n        <CardWrapper score={score} best={personalBest} itemClicked={itemClicked}/>\r\n        </div>\r\n    </>\r\n    )\r\n}","import './App.css';\nimport Cards from './components/Card';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cards />\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport '../../styles/MemorySortStyles/sortchar.css';\r\n\r\nexport default function SortChar(props){\r\n    return (\r\n        <div className='sort-character-wrapper'>\r\n            <div className='sort-image-wrapper'>\r\n                <img className='sort-char-image' src={props.image} alt={props.alternative} />\r\n            </div>\r\n            <div>\r\n                <h3 className='sort-char-header'>{props.charHead}</h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../styles/MemorySortStyles/finishModal.css'\r\nexport default function FinishModal(props){\r\n\r\n    return (\r\n        <div className={`win-modal ${props.status}`} role=\"dialog\" >\r\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n              <div className=\"modal-content cust-modal\">\r\n                <div className=\"modal-header\">\r\n                  <h5 id=\"exampleModalLongTitle\">You Won!</h5>\r\n                  <button type=\"button\" className=\"modal-btn\" onClick={props.closeModal} aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">x</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  You sorted the countries in the right order!\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button type=\"button\" className=\"modal-btn\" onClick={() => \r\n                  {\r\n                    props.closeModal();\r\n                    props.restart();\r\n                  }} >Restart</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../../styles/MemorySortStyles/finishModal.css'\r\nexport default function FinishModal(props){\r\n    return (\r\n        <div className={`lost-modal ${props.status}`} role=\"dialog\" >\r\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n              <div className=\"modal-content cust-modal\">\r\n                <div className=\"modal-header text-center\">\r\n                  <h5 id=\"exampleModalLongTitle\">You Lost!</h5>\r\n                  <button type=\"button\" className=\"modal-btn\"  onClick={props.closeModal} aria-label=\"Close\">\r\n                    <span>x</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  You did not order the countries correctly!\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button type=\"button\" className=\"modal-btn\"  onClick={() => \r\n                  {\r\n                    props.closeModal();\r\n                    props.restart();\r\n                  }}  >Restart</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport FinishModal from './FinishModal';\r\nimport LostModal from './LostModal';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SortHeader(props) {\r\n    const {newCards, ogOrder, shuffle} = props;\r\n    const [winStatus, setWinStatus] = useState('off');\r\n    const [lossStatus, setLossStatus] = useState('off');\r\n    function checkwinStatus(){\r\n        setWinStatus('win')\r\n        console.log({newCards});\r\n        console.log({ogOrder});\r\n        newCards.forEach((card, index)=>{\r\n            if (card.key !== ogOrder[index].key){\r\n                setWinStatus(\"off\")\r\n                setLossStatus(\"lost\")\r\n            }\r\n        })\r\n        \r\n        console.log(winStatus)\r\n    }\r\n    function closeModal(){\r\n        setWinStatus('off')\r\n        setLossStatus(\"off\")\r\n    }\r\n    return(\r\n        <div className='sort-header d-flex flex-column align-items-center mb-3'>\r\n            <h2 className=\"memory-sort-header mb-2\">Memory Sort</h2>\r\n            <Link to='/'>\r\n                <li className='mb-2'>Memory Shuffle</li>\r\n            </Link>\r\n            <div className='sort-btn-container text-center'>\r\n                <button className=\"shuffle-cards cust-btn\" onClick={(e) => shuffle(e)}>Start</button>\r\n                <button className='submit-cards off cust-btn' data-toggle=\"modal\" data-target=\"#exampleModalCenter\" onClick={checkwinStatus}>Finished!</button>\r\n            </div>\r\n            <FinishModal restart={props.restart} closeModal={closeModal} status={winStatus}/>\r\n            <LostModal restart={props.restart} closeModal={closeModal} status={lossStatus}/>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport '../../styles/MemorySortStyles/sort.css';\r\nimport SortChar from \"./SortCharacter\";\r\nimport { DragDropContext, Droppable , Draggable } from 'react-beautiful-dnd'\r\nimport SortHeader from \"./SortHeader\";\r\nexport default function MemorySortComponent(props) {\r\n    const [cards, setCards] = useState([{}]);\r\n    const [ogOrder, setOgOrder] = useState([]);\r\n    const [newCards, setNewCards] = useState([{}]);\r\n    let cardsBaseCase = [{\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"1\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"2\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"3\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"4\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"5\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"6\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"7\",\r\n        flag: \"\",\r\n        punc: ''\r\n    },\r\n    {\r\n        capital: \"\",\r\n        name: \"\",\r\n        key: \"8\",\r\n        flag: \"\",\r\n        punc: ''\r\n    }];\r\n    let tempArr = [];\r\n    let tempCountry = [];\r\n    useEffect(() => {\r\n        console.log('Mount')\r\n        getCountries()\r\n        console.log('------------------------------')\r\n    },[])\r\n    function getCapitals(i) {\r\n        Axios.post('https://countriesnow.space/api/v0.1/countries/capital', {\r\n                \"country\": tempCountry[i].name\r\n            }).then(response => {\r\n                response.data.data.capital ? tempCountry[i].capital = response.data.data.capital :  tempCountry[i].capital = \"None\";\r\n                tempCountry[i].punc = \",\"\r\n                if (i === tempArr.length - 1){\r\n                    setTimeout(() => {\r\n                        console.log(tempCountry)\r\n                        setCards(tempCountry)\r\n                    }, 100)\r\n                    \r\n                }\r\n            }).catch(error => {console.log(error)});\r\n    }\r\n    const getCountries = () => {\r\n        setCards(cardsBaseCase)\r\n        Axios.get(\"https://countriesnow.space/api/v0.1/countries/flag/images\").then(\r\n            (response) => {\r\n                if (response.status === 200){\r\n                    tempArr = [];\r\n                    // Get countries name and thier flags\r\n                    for(let i = 0; i < 8; i++){\r\n                        let random = Math.floor(Math.random() * response.data.data.length)\r\n                        if (!tempArr.includes(random)){\r\n                            tempArr.push(random);\r\n                        }\r\n                        \r\n                    }\r\n                    console.log(tempArr)\r\n                    tempCountry = [];\r\n                    for(let i = 0; i < tempArr.length; i++){\r\n                        tempCountry.push(response.data.data[tempArr[i]]);\r\n                        tempCountry[i].key = i;\r\n                        getCapitals(i)\r\n                    }\r\n                }                \r\n            })\r\n            console.log('------------------------------')           \r\n    }\r\n\r\n    function shuffle(e) {\r\n        \r\n        e.target.nextSibling.classList.remove('off')\r\n        e.target.classList.add('off')\r\n        setOgOrder(cards);\r\n        if(cards !== undefined){\r\n            let arr=[...cards];\r\n                let currentIndex = arr.length,  randomIndex;\r\n\r\n                while (currentIndex !== 0) {\r\n                \r\n                    // Pick a remaining element.\r\n                    randomIndex = Math.floor(Math.random() * currentIndex);\r\n                    currentIndex--;\r\n                \r\n                    // And swap it with the current element.\r\n                    [arr[currentIndex], arr[randomIndex]] = [\r\n                      arr[randomIndex], arr[currentIndex]];\r\n                }\r\n                setCards(arr);\r\n                \r\n        }\r\n    }\r\n    function handleOnDragEnd(result){\r\n        console.log(result);\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(cards);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        setCards(items)\r\n        setNewCards(items)\r\n    }\r\n\r\n    return (\r\n        <div className=\"memory-sort-container\">\r\n            <div className={'memory-sort-header'} >\r\n            <SortHeader restart={getCountries} shuffle={shuffle} newCards={newCards} ogOrder={ogOrder} />\r\n            </div>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId='grid-cell-sort'>\r\n                    {(provided) => \r\n                    (\r\n                        \r\n                            <ul {...provided.droppableProps} ref={provided.innerRef} className='grid-sort' >\r\n                            {cards.map((card, index) => {\r\n                                return(\r\n                                    <Draggable key={card.key} draggableId={`${card.key}`} index={index}>\r\n                                        {(provided) => (\r\n                                            <div className='grid-cell-sort' key={card.key} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                                                <SortChar  key={card.key} image={ card.flag } alternative={`${card.capital}${card.punc} ${card.name}`} charHead={`${card.capital}${card.punc} ${card.name}`} />\r\n                                            </div> \r\n                                        )}\r\n                                         \r\n                                    </Draggable>\r\n                                )\r\n                                \r\n                                }\r\n                            )}\r\n                            {provided.placeholder}\r\n                            </ul>\r\n                    )\r\n                }\r\n                    \r\n                </Droppable>\r\n            </DragDropContext>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport MemorySortComponent from \"./components/MemorySort/Sort\";\r\n\r\nconst RouteSwitch = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<App />} />\r\n        <Route path=\"/sort\" element={<MemorySortComponent />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default RouteSwitch;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport RouteSwitch from \"./RouteSwitch\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n//import App from \"./App\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n        <RouteSwitch />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}