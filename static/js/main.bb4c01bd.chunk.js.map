{"version":3,"sources":["components/MemoryShuffle/Scoreboard.js","components/Menu/MenuContent.js","components/Menu/Menu.js","components/MemoryShuffle/InfoModal.js","components/MemoryShuffle/Header.js","components/MemoryShuffle/Gameboard.js","components/MemoryShuffle/Character.js","components/MemoryShuffle/CardWrapper.js","components/MemoryShuffle/Card.js","App.js","components/MemorySort/SortCharacter.js","components/MemorySort/FinishModal.js","components/MemorySort/LostModal.js","components/MemorySort/InfoModal.js","components/MemorySort/SortHeader.js","components/MemorySort/Sort.js","RouteSwitch.js","reportWebVitals.js","index.js"],"names":["Scoreboard","props","scoreContext","useContext","ScoreContext","react_default","a","createElement","className","scoreState","personalBest","MenuContent","useEffect","menu","document","querySelector","classList","contains","remove","setTimeout","add","console","log","onClick","modMenu","xmlns","width","height","fill","viewBox","d","dist","to","Menu","_useState","useState","_useState2","Object","slicedToArray","setMenu","MenuContent_MenuContent","fill-rule","InfoModal","styles","backdrop","backgroundColor","display","justifyContent","alignItems","position","zIndex","top","modal","maxWidth","padding","border","pText","fontSize","style","clickInfo","Header","info","setInfo","Fragment","marginLeft","class","Scoreboard_Scoreboard","Gameboard","Header_Header","Character","src","image","alt","alternative","charHead","CardWrapper","cardsBaseCase","capital","name","key","flag","punc","best","itemClicked","cards","setCards","cardArray","undefined","randomIndex","arr","toConsumableArray","currentIndex","length","Math","floor","random","_ref","getCountries","tempArr","tempCountry","getCapitals","i","Axios","post","country","then","response","data","catch","error","get","scoreDispatch","type","status","includes","push","map","card","Character_Character","concat","Card","clicked","modClicked","_useState3","_useState4","modBest","num","React","createContext","baseScore","scoreReducer","state","action","App","_useReducer","useReducer","_useReducer2","score","dispatch","Provider","value","Card_Card","SortChar","FinishModal","role","id","closeModal","restart","textAlign","SortHeader","newCards","ogOrder","shuffle","winStatus","setWinStatus","lossStatus","setLossStatus","_useState5","_useState6","InfoModal_InfoModal","e","data-toggle","data-target","forEach","index","LostModal_FinishModal","MemorySortComponent","setOgOrder","setNewCards","_useState7","_useState8","start","setStart","gameStarted","react_beautiful_dnd_esm","onDragEnd","result","destination","items","Array","from","_items$splice","splice","source","reorderedItem","droppableId","provided","assign","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","gameNotStarted","target","nextSibling","RouteSwitch","react_router_dist","path","element","src_App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","src_RouteSwitch"],"mappings":"kbAMe,SAASA,EAAYC,GAEhC,IAAMC,EAAeC,qBAAWC,GAChC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAI,UAAQL,EAAaO,YACzBJ,EAAAC,EAAAC,cAAA,UAAI,kBAAgBN,EAAMS,cAC1BL,EAAAC,EAAAC,cAAA,UAAI,wBCND,SAASI,EAAYV,GAgBhC,OAdAW,oBAAU,WACN,IAAIC,EAAOC,SAASC,cAAc,mBAC9BF,EAAKG,UAAUC,SAAS,QACxBJ,EAAKG,UAAUE,OAAO,QAEtBC,WAAW,WACXN,EAAKG,UAAUI,IAAI,SACpB,IAIHC,QAAQC,IAAI,cACd,IAGMjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAI,SACJF,EAAAC,EAAAC,cAAA,OAAKgB,QAAStB,EAAMuB,QAASC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAepB,UAAU,uBAAuBqB,QAAQ,aAChJxB,EAAAC,EAAAC,cAAA,QAAMuB,EAAE,+TAGhBzB,EAAAC,EAAAC,cAACwB,EAAA,EAAI,CAACC,GAAG,KACL3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAO,mBAE1BH,EAAAC,EAAAC,cAACwB,EAAA,EAAI,CAACC,GAAG,SACL3B,EAAAC,EAAAC,cAAA,WAAK,iBChCV,SAAS0B,EAAKhC,GAAM,IAAAiC,EACPC,qBAAUC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA3BrB,EAAIuB,EAAA,GAAEG,EAAOH,EAAA,GAEpB,SAASZ,IACLe,GAAS1B,GAGb,OAAGA,EAEKR,EAAAC,EAAAC,cAACiC,EAAW,CAAChB,QAASA,IAItBnB,EAAAC,EAAAC,cAAA,OAAKgB,QAASC,EAASC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAepB,UAAU,uBAAuBqB,QAAQ,aAC1IxB,EAAAC,EAAAC,cAAA,QAAMkC,YAAU,UAAUX,EAAE,0LCf7B,SAASY,EAAUzC,GAE9B,IAAM0C,EAAS,CACXC,SAAU,CACNjB,OAAQ,OACRD,MAAO,OACPmB,gBAAiB,oBACjBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,SAAU,QACVC,OAAQ,GACRC,IAAK,GAETC,MAAO,CACHH,SAAU,QACVC,OAAQ,IACRL,gBAAiB,QACjBlB,OAAQ,OACR0B,SAAU,MACVC,QAAS,SACTC,OAAQ,gCAEZC,MAAO,CACHC,SAAU,WAGlB,OACIpD,EAAAC,EAAAC,cAAA,OAAKmD,MAAOf,EAAOC,SAAUrB,QAAS,WAAOtB,EAAM0D,cAC/CtD,EAAAC,EAAAC,cAAA,OAAKmD,MAAOf,EAAOS,OACf/C,EAAAC,EAAAC,cAAA,UAAI,UACJF,EAAAC,EAAAC,cAAA,KAAGmD,MAAOf,EAAOa,OAAO,sNCxBzB,SAASI,EAAQ3D,GAAM,IAAAiC,EACVC,oBAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAhC2B,EAAIzB,EAAA,GAAE0B,EAAO1B,EAAA,GACduB,EAAY,WACdG,GAASD,IAEb,OACIxD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KAAGF,EAAOxD,EAAAC,EAAAC,cAACmC,EAAS,CAACiB,UAAWA,IAAgB,KAChDtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAI,cACJF,EAAAC,EAAAC,cAAA,OAAKkB,MAAM,6BAA6BF,QAASoC,EAAWD,MAAO,CAACT,SAAU,SAAUe,WAAY,QAAStC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeqC,MAAM,oBAAoBpC,QAAQ,aACtLxB,EAAAC,EAAAC,cAAA,QAAMuB,EAAE,oJACRzB,EAAAC,EAAAC,cAAA,QAAMuB,EAAE,sPAGZzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAcH,EAAAC,EAAAC,cAAC0B,EAAI,QAEtC5B,EAAAC,EAAAC,cAAC2D,EAAU,CAACxD,aAAcT,EAAMS,iBCxB7B,SAASyD,EAAUlE,GAE9B,OACAI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAC6D,EAAM,CAAC1D,aAAcT,EAAMS,sBCHrB,SAAS2D,EAAWpE,GAC/B,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa8D,IAAKrE,EAAMsE,MAAOC,IAAKvE,EAAMwE,eAE7DpE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeP,EAAMyE,wBCNpC,SAASC,EAAY1E,GAChC,IAAI2E,EAAgB,CAAC,CACjBC,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,KACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,KACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,KACLC,KAAM,GACNC,KAAM,KAEJ/E,EAAeC,qBAAWC,GAExB8E,EAAqBjF,EAArBiF,KAAMC,EAAelF,EAAfkF,YAAWjD,EAECC,mBAASyC,GAAcxC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA1CkD,EAAKhD,EAAA,GAAEiD,EAAQjD,EAAA,GAClBkD,EAAY,GAChB1E,oBAAU,WAGN,GAFAS,QAAQC,IAAI,kBAEKiE,IAAdD,EAAwB,CAIvB,IAHA,IACgCE,EAD5BC,EAAIpD,OAAAqD,EAAA,EAAArD,CAAI+C,GACRO,EAAeF,EAAIG,OAEC,IAAjBD,GAAoB,CAGvBH,EAAcK,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,IAEA,IAAAK,EACwC,CACtCP,EAAID,GAAcC,EAAIE,IADvBF,EAAIE,GAAaK,EAAA,GAAEP,EAAID,GAAYQ,EAAA,GAGxCX,EAASI,GAEbpE,QAAQC,IAAI,mCACd,CAACpB,EAAaO,WAAYyE,IAC5BtE,oBAAU,WACNS,QAAQC,IAAI,SACZ2E,IACA5E,QAAQC,IAAI,mCACd,IACF,IAAI4E,EAAU,GACVC,EAAc,GAClB,SAASC,EAAYC,GACjBC,IAAMC,KAAK,wDAAyD,CAC5DC,QAAWL,EAAYE,GAAGvB,OAC3B2B,KAAK,SAAAC,GACJA,EAASC,KAAKA,KAAK9B,QAAUsB,EAAYE,GAAGxB,QAAU6B,EAASC,KAAKA,KAAK9B,QAAWsB,EAAYE,GAAGxB,QAAU,qBAC7GsB,EAAYE,GAAGpB,KAAO,IAClBoB,IAAMH,EAAQN,OAAS,GACvBzE,WAAW,WACPE,QAAQC,IAAI6E,GACZb,EAAYa,EACZd,EAASc,IACV,OAGRS,MAAM,SAAAC,GAAUxF,QAAQC,IAAIuF,KAEvC,IAAMZ,EAAe,WACjBZ,EAAST,GACT0B,IAAMQ,IAAI,6DAA6DL,KACnE,SAACC,GAEG,GADAxG,EAAa6G,cAAc,CAACC,KAAM,YACV,MAApBN,EAASO,OAAe,CACxBf,EAAU,GAEV,IAAI,IAAIG,EAAI,EAAGA,EAAI,GAAIA,IAAI,CACvB,IAAIN,EAASF,KAAKC,MAAMD,KAAKE,SAAWW,EAASC,KAAKA,KAAKf,QACtDM,EAAQgB,SAASnB,IAClBG,EAAQiB,KAAKpB,GAIrB1E,QAAQC,IAAI4E,GACZC,EAAc,GACd,IAAI,IAAIE,EAAI,EAAGA,EAAIH,EAAQN,OAAQS,IAC/BF,EAAYgB,KAAKT,EAASC,KAAKA,KAAKT,EAAQG,KAC5CF,EAAYE,GAAGtB,IAAMsB,EACrBD,EAAYC,MAIxBhF,QAAQC,IAAI,mCAKpB,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACA1D,EAAAC,EAAAC,cAAA,UAAQgB,QAAS0E,EAAczF,UAAU,YAAW,sBACpDH,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBAEd4E,EAAMgC,IAAI,SAACC,GAAI,OACZhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcuE,IAAKsC,EAAKtC,IAAKxD,QAAS,WAAO4D,EAAYkC,EAAKtC,OACrE1E,EAAAC,EAAAC,cAAC+G,EAAS,CAAEvC,IAAKsC,EAAKtC,IAAKR,MAAQ8C,EAAKrC,KAAOP,YAAW,GAAA8C,OAAKF,EAAKxC,SAAO0C,OAAGF,EAAKpC,KAAI,KAAAsC,OAAIF,EAAKvC,MAAQJ,SAAQ,GAAA6C,OAAKF,EAAKxC,SAAO0C,OAAGF,EAAKpC,KAAI,KAAAsC,OAAIF,EAAKvC,aCzK/J,SAAS0C,EAAKvH,GAAM,IAAAiC,EACDC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAnCuF,EAAOrF,EAAA,GAAEsF,EAAUtF,EAAA,GAAAuF,EACMxF,mBAAS,GAAEyF,EAAAvF,OAAAC,EAAA,EAAAD,CAAAsF,EAAA,GAApCjH,EAAYkH,EAAA,GAAEC,EAAOD,EAAA,GAGtB1H,EAAeC,qBAAWC,GAChCiB,QAAQC,IAAIpB,GAkBZ,OACAG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyD,SAAA,KACI1D,EAAAC,EAAAC,cAAC4D,EAAS,CAACzD,aAAcA,IACzBL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoE,EAAW,CAACO,KAAMxE,EAAcyE,YArBjB,SAAC2C,GAGjB,GAAIL,EAAQP,SAASY,GAMjBJ,EAAW,IACRxH,EAAaO,WAAaC,GACzBmH,EAAQ3H,EAAaO,YAEzBP,EAAa6G,cAAc,CAACC,KAAM,cAVZ,CACtB,IAAId,EAAO7D,OAAAqD,EAAA,EAAArD,CAAOoF,GAClBvB,EAAQiB,KAAKW,GACbJ,EAAWxB,GACXhG,EAAa6G,cAAc,CAACC,KAAM,gBCjBvC,IAAM5G,EAAe2H,IAAMC,gBAE5BC,EAAY,EACZC,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOpB,MACb,IAAK,QACH,OAAOmB,EAAQ,EACjB,IAAK,QAEL,IAAK,UACH,OAAOF,EACT,QAAS,OAAOE,IAiBLE,MAZf,WAAe,IAAAC,EACaC,qBAAWL,EAAcD,GAAUO,EAAAnG,OAAAC,EAAA,EAAAD,CAAAiG,EAAA,GAAtDG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtB,OACEnI,EAAAC,EAAAC,cAACH,EAAauI,SAAQ,CAACC,MAAO,CAACnI,WAAYgI,EAAO1B,cAAe2B,IAC/DrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsI,EAAK,qBCtBC,SAASC,EAAS7I,GAC7B,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB8D,IAAKrE,EAAMsE,MAAOC,IAAKvE,EAAMwE,eAElEpE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAoBP,EAAMyE,8BCPzC,SAASqE,EAAY9I,GAEhC,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAS,aAAA+G,OAAetH,EAAMgH,QAAU+B,KAAK,UAC9C3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqCwI,KAAK,YACvD3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAI0I,GAAG,yBAAwB,aAGjC5I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAa,gDAG5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQyG,KAAK,SAASxG,UAAU,YAAYe,QAAS,WAEnDtB,EAAMiJ,aACNjJ,EAAMkJ,YACJ,eClBP,SAASJ,EAAY9I,GAChC,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAS,0BAAA+G,OAA4BtH,EAAMgH,QAAU+B,KAAK,UAC3D3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqCwI,KAAK,YACvD3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAI,cAGNF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAkB,8CAGjCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQyG,KAAK,SAASxG,UAAU,YAAae,QAAS,WAEpDtB,EAAMiJ,aACNjJ,EAAMkJ,YACH,eClBR,SAASzG,EAAUzC,GAC9BoB,QAAQC,IAAIrB,GACZ,IAAM0C,EAAS,CACXC,SAAU,CACNjB,OAAQ,OACRD,MAAO,OACPmB,gBAAiB,oBACjBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,SAAU,QACVC,OAAQ,IAEZE,MAAO,CACHH,SAAU,QACVC,OAAQ,IACRL,gBAAiB,QACjBlB,OAAQ,OACR0B,SAAU,MACVC,QAAS,SACTC,OAAQ,+BACR6F,UAAW,UAEf5F,MAAO,CACHC,SAAU,WAGlB,OACIpD,EAAAC,EAAAC,cAAA,OAAKmD,MAAOf,EAAOC,SAAUrB,QAAS,WAAOtB,EAAM6D,YAC/CzD,EAAAC,EAAAC,cAAA,OAAKmD,MAAOf,EAAOS,OACf/C,EAAAC,EAAAC,cAAA,UAAI,UACJF,EAAAC,EAAAC,cAAA,KAAGmD,MAAOf,EAAOa,OAAO,sSC1BzB,SAAS6F,EAAWpJ,GAAO,IAC/BqJ,EAA8BrJ,EAA9BqJ,SAAUC,EAAoBtJ,EAApBsJ,QAASC,EAAWvJ,EAAXuJ,QAAOtH,EACCC,mBAAS,OAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA1CuH,EAASrH,EAAA,GAAEsH,EAAYtH,EAAA,GAAAuF,EACMxF,mBAAS,OAAMyF,EAAAvF,OAAAC,EAAA,EAAAD,CAAAsF,EAAA,GAA5CgC,EAAU/B,EAAA,GAAEgC,EAAahC,EAAA,GAAAiC,EACR1H,qBAAU2H,EAAAzH,OAAAC,EAAA,EAAAD,CAAAwH,EAAA,GAA3BhG,EAAIiG,EAAA,GAAEhG,EAAOgG,EAAA,GAcpB,SAASZ,IACLQ,EAAa,OACbE,EAAc,OACd9I,SAASC,cAAc,iBAAiBC,UAAUI,IAAI,OACtDN,SAASC,cAAc,kBAAkBC,UAAUE,OAAO,OAO9D,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0DACVqD,EAAOxD,EAAAC,EAAAC,cAACwJ,EAAS,CAACjG,QAASA,EAASD,KAAMA,IAAW,KACtDxD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAA0B,cACxCH,EAAAC,EAAAC,cAAA,OAAKkB,MAAM,6BAA6BF,QAR9B,WACduC,GAASD,GACTxC,QAAQC,IAAI,qBAMoDI,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeqC,MAAM,oBAAoBpC,QAAQ,aACrIxB,EAAAC,EAAAC,cAAA,QAAMuB,EAAE,oJACRzB,EAAAC,EAAAC,cAAA,QAAMuB,EAAE,sPAGZzB,EAAAC,EAAAC,cAAC0B,EAAI,MACL5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBe,QAAS,SAACyI,GAAC,OAAKR,EAAQQ,KAAI,SACvE3J,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iCAAiCyJ,cAAY,QAAQC,cAAY,sBAAsB3I,QApCrH,WACImI,EAAa,OACbrI,QAAQC,IAAI,CAACgI,aACbjI,QAAQC,IAAI,CAACiI,YACbD,EAASa,QAAQ,SAAC9C,EAAM+C,GAChB/C,EAAKtC,MAAQwE,EAAQa,GAAOrF,MAC5B2E,EAAa,OACbE,EAAc,WAItBvI,QAAQC,IAAImI,KAyB8H,cAEtIpJ,EAAAC,EAAAC,cAACwI,EAAW,CAACI,QAASlJ,EAAMkJ,QAASD,WAAYA,EAAYjC,OAAQwC,IACrEpJ,EAAAC,EAAAC,cAAC8J,EAAS,CAAClB,QAASlJ,EAAMkJ,QAASD,WAAYA,EAAYjC,OAAQ0C,KC7ChE,SAASW,EAAoBrK,GAAO,IAAAiC,EACrBC,mBAAS,CAAC,KAAIC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAjCkD,EAAKhD,EAAA,GAAEiD,EAAQjD,EAAA,GAAAuF,EACQxF,mBAAS,IAAGyF,EAAAvF,OAAAC,EAAA,EAAAD,CAAAsF,EAAA,GAAnC4B,EAAO3B,EAAA,GAAE2C,EAAU3C,EAAA,GAAAiC,EACM1H,mBAAS,CAAC,KAAI2H,EAAAzH,OAAAC,EAAA,EAAAD,CAAAwH,EAAA,GAAvCP,EAAQQ,EAAA,GAAEU,EAAWV,EAAA,GAAAW,EACFtI,oBAAS,GAAKuI,EAAArI,OAAAC,EAAA,EAAAD,CAAAoI,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAClB9F,EAAgB,CAAC,CACjBC,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,IAEV,CACIJ,QAAS,GACTC,KAAM,GACNC,IAAK,IACLC,KAAM,GACNC,KAAM,KAENiB,EAAU,GACVC,EAAc,GAMlB,SAASC,EAAYC,GACjBC,IAAMC,KAAK,wDAAyD,CAC5DC,QAAWL,EAAYE,GAAGvB,OAC3B2B,KAAK,SAAAC,GACJA,EAASC,KAAKA,KAAK9B,QAAUsB,EAAYE,GAAGxB,QAAU6B,EAASC,KAAKA,KAAK9B,QAAWsB,EAAYE,GAAGxB,QAAU,OAC7GsB,EAAYE,GAAGpB,KAAO,IAClBoB,IAAMH,EAAQN,OAAS,GACvBzE,WAAW,WACPE,QAAQC,IAAI6E,GACZd,EAASc,IACV,OAGRS,MAAM,SAAAC,GAAUxF,QAAQC,IAAIuF,KAlBvCjG,oBAAU,WACNS,QAAQC,IAAI,SACZ2E,IACA5E,QAAQC,IAAI,mCACd,IAgBF,IAAM2E,EAAe,WACjBZ,EAAST,GACTgG,GAAUD,GACVrE,IAAMQ,IAAI,6DAA6DL,KACnE,SAACC,GACG,GAAwB,MAApBA,EAASO,OAAe,CACxBf,EAAU,GAEV,IAAI,IAAIG,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACtB,IAAIN,EAASF,KAAKC,MAAMD,KAAKE,SAAWW,EAASC,KAAKA,KAAKf,QACtDM,EAAQgB,SAASnB,IAClBG,EAAQiB,KAAKpB,GAIrB1E,QAAQC,IAAI4E,GACZC,EAAc,GACd,IAAI,IAAIE,EAAI,EAAGA,EAAIH,EAAQN,OAAQS,IAC/BF,EAAYgB,KAAKT,EAASC,KAAKA,KAAKT,EAAQG,KAC5CF,EAAYE,GAAGtB,IAAMsB,EACrBD,EAAYC,MAIxBhF,QAAQC,IAAI,mCAqCpB,IAAMuJ,EACExK,EAAAC,EAAAC,cAACuK,EAAA,EAAe,CAACC,UAZzB,SAAyBC,GAErB,GADA3J,QAAQC,IAAI0J,GACPA,EAAOC,YAAZ,CAEA,IAAMC,EAAQC,MAAMC,KAAKhG,GAAOiG,EACRH,EAAMI,OAAON,EAAOO,OAAOnB,MAAO,GAAnDoB,EAAqDnJ,OAAAC,EAAA,EAAAD,CAAAgJ,EAAA,GAAxC,GACpBH,EAAMI,OAAON,EAAOC,YAAYb,MAAO,EAAGoB,GAC1CnG,EAAS6F,GACTV,EAAYU,MAKJ7K,EAAAC,EAAAC,cAACuK,EAAA,EAAS,CAACW,YAAY,kBAClB,SAACC,GAAQ,OAENrL,EAAAC,EAAAC,cAAA,KAAA8B,OAAAsJ,OAAA,GAAQD,EAASE,eAAc,CAAEC,IAAKH,EAASI,SAAUtL,UAAU,cAClE4E,EAAMgC,IAAI,SAACC,EAAM+C,GACd,OACI/J,EAAAC,EAAAC,cAACuK,EAAA,EAAS,CAAC/F,IAAKsC,EAAKtC,IAAKgH,YAAW,GAAAxE,OAAKF,EAAKtC,KAAOqF,MAAOA,GACxD,SAACsB,GAAQ,OACNrL,EAAAC,EAAAC,cAAA,MAAA8B,OAAAsJ,OAAA,CAAKnL,UAAU,iBAAiBuE,IAAKsC,EAAKtC,IAAM,GAAO2G,EAASM,eAAoBN,EAASO,gBAAe,CAAEJ,IAAKH,EAASI,WACxHzL,EAAAC,EAAAC,cAACuI,EAAQ,CAAE/D,IAAKsC,EAAKtC,IAAM,EAAGR,MAAQ8C,EAAKrC,KAAOP,YAAW,GAAA8C,OAAKF,EAAKxC,SAAO0C,OAAGF,EAAKpC,KAAI,KAAAsC,OAAIF,EAAKvC,MAAQJ,SAAQ,GAAA6C,OAAKF,EAAKxC,SAAO0C,OAAGF,EAAKpC,KAAI,KAAAsC,OAAIF,EAAKvC,aAS5K4G,EAASQ,gBASxBC,EACF9L,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACT4E,EAAMgC,IAAI,SAAAC,GACP,OACAhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBuE,IAAKsC,EAAKtC,IAAM,GAC5C1E,EAAAC,EAAAC,cAACuI,EAAQ,CAAE/D,IAAKsC,EAAKtC,IAAM,EAAGR,MAAQ8C,EAAKrC,KAAOP,YAAW,GAAA8C,OAAKF,EAAKxC,SAAO0C,OAAGF,EAAKpC,KAAI,KAAAsC,OAAIF,EAAKvC,MAAQJ,SAAQ,GAAA6C,OAAKF,EAAKxC,SAAO0C,OAAGF,EAAKpC,KAAI,KAAAsC,OAAIF,EAAKvC,YAKzK,OACIzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,sBAChBH,EAAAC,EAAAC,cAAC8I,EAAU,CAACF,QAASlD,EAAcuD,QA5E3C,SAAiBQ,GAKb,GAJAY,GAAS,GACTZ,EAAEoC,OAAOC,YAAYrL,UAAUE,OAAO,OACtC8I,EAAEoC,OAAOpL,UAAUI,IAAI,OACvBmJ,EAAWnF,QACEG,IAAVH,EAAoB,CAIf,IAHJ,IACoCI,EADhCC,EAAIpD,OAAAqD,EAAA,EAAArD,CAAI+C,GACJO,EAAeF,EAAIG,OAEC,IAAjBD,GAAoB,CAGvBH,EAAcK,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,IAEA,IAAAK,EACwC,CACtCP,EAAID,GAAcC,EAAIE,IADvBF,EAAIE,GAAaK,EAAA,GAAEP,EAAID,GAAYQ,EAAA,GAGxCX,EAASI,KAyDwC6D,SAAUA,EAAUC,QAASA,EAASqB,SAAUA,KAEpGD,EAAQE,EAAcsB,GC7LnC,IAWeG,EAXK,WAClB,OACEjM,EAAAC,EAAAC,cAACwB,EAAA,EAAU,KACT1B,EAAAC,EAAAC,cAACgM,EAAA,EAAM,KACLlM,EAAAC,EAAAC,cAACgM,EAAA,EAAK,CAACC,KAAK,IAAIC,QAASpM,EAAAC,EAAAC,cAACmM,EAAG,QAC7BrM,EAAAC,EAAAC,cAACgM,EAAA,EAAK,CAACC,KAAK,QAAQC,QAASpM,EAAAC,EAAAC,cAAC+J,EAAmB,WCE1CqC,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA9C,EAAA,GAAAvD,KAAAqG,EAAAC,KAAA,UAAqBtG,KAAK,SAAAT,GAAiD,IAA9CgH,EAAMhH,EAANgH,OAAQC,EAAMjH,EAANiH,OAAQC,EAAMlH,EAANkH,OAAQC,EAAMnH,EAANmH,OAAQC,EAAOpH,EAAPoH,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,OCDDS,IAASC,WAAWxM,SAASyM,eAAe,SACpDC,OACGnN,EAAAC,EAAAC,cAACkN,EAAW,OAMpBd","file":"static/js/main.bb4c01bd.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport '../../styles/Scoreboard.css';\nimport {ScoreContext} from '../../App'\n// This will be a scoreboard for current score/best score and max score we will need to track how many unique characters someone clicks \n// To track clicked possibly have a unique id for each card, each click we should check an array for that cards id and either end the game or add id to arr\n\nexport default function Scoreboard (props){\n    // pass on to props some state that tracks your score and the session best should be passed in from the component with all the cards in them \n    const scoreContext = useContext(ScoreContext);\n    return(\n        <div className='scoreboard'>\n            <h4>Score: {scoreContext.scoreState}</h4> \n            <h4>Personal Best: {props.personalBest}</h4>\n            <h4>Max: 12</h4>           \n        </div>\n    )\n}","import React, {useEffect} from 'react';\r\nimport '../../styles/Menu/MenuContent.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// This component should have the content we want for out navigation menu mainly out links back and forth between pages \r\n// We will likely need some conditional rendering to see which page we are currenly on do disable or hide nav links to the page we are already on\r\n\r\nexport default function MenuContent(props){\r\n\r\n    useEffect(() => {\r\n        let menu = document.querySelector('.menu-container');\r\n        if (menu.classList.contains('open')){\r\n            menu.classList.remove('open');\r\n        }else{\r\n            setTimeout(() =>{\r\n            menu.classList.add('open');\r\n        }, 10)\r\n        }\r\n        \r\n        \r\n        console.log('open menu')\r\n    },[])\r\n\r\n    return (\r\n            <div className='menu-container'>\r\n                <div className='menu-header'>\r\n                    <h1>Games</h1>\r\n                    <svg onClick={props.modMenu} xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-backspace-fill\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M15.683 3a2 2 0 0 0-2-2h-7.08a2 2 0 0 0-1.519.698L.241 7.35a1 1 0 0 0 0 1.302l4.843 5.65A2 2 0 0 0 6.603 15h7.08a2 2 0 0 0 2-2V3zM5.829 5.854a.5.5 0 1 1 .707-.708l2.147 2.147 2.146-2.147a.5.5 0 1 1 .707.708L9.39 8l2.146 2.146a.5.5 0 0 1-.707.708L8.683 8.707l-2.147 2.147a.5.5 0 0 1-.707-.708L7.976 8 5.829 5.854z\"/>\r\n                    </svg>\r\n                </div>\r\n                <Link to='/'>\r\n                    <div className='mb-2'>Memory Shuffle</div>\r\n                </Link>\r\n                <Link to='/sort'>\r\n                    <div>Memory Sort</div>\r\n                </Link>\r\n            </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport MenuContent from './MenuContent';\r\n// This componenet should be a clickable svg or boxicon that when clicked will open up a menucontent componenet\r\nexport default function Menu(props){\r\n    const [menu, setMenu] = useState()\r\n    \r\n    function modMenu(){\r\n        setMenu(!menu)\r\n    }\r\n\r\n    if(menu){\r\n        return(\r\n            <MenuContent modMenu={modMenu} />\r\n        )\r\n    }else{\r\n        return(\r\n            <svg onClick={modMenu} xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-list menu-icon\" viewBox=\"0 0 16 16\">\r\n                <path fill-rule=\"evenodd\" d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\r\n            </svg>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default function InfoModal(props){\r\n    \r\n    const styles = {\r\n        backdrop: {\r\n            height: '100%',\r\n            width: '100%',\r\n            backgroundColor: 'rgba(0, 0, 0, .5)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            position: 'fixed',\r\n            zIndex: 99,\r\n            top: 0,\r\n        },\r\n        modal: {\r\n            position: 'fixed',\r\n            zIndex: 100,\r\n            backgroundColor: 'white',\r\n            height: 'auto',\r\n            maxWidth: '50%',\r\n            padding: '.75rem',\r\n            border: '1px solid rgba(240, 46, 170)'\r\n        },\r\n        pText: {\r\n            fontSize: '1.1rem',\r\n        }\r\n    }\r\n    return(\r\n        <div style={styles.backdrop} onClick={() => {props.clickInfo()}}>\r\n            <div style={styles.modal}>\r\n                <h2>Rules:</h2>\r\n                <p style={styles.pText}>Choose a card from the grid to click on and remember it, once clicked the cards will shuffle. Choose another card to click\r\n                just make sure you do not click the same one twice. Keep going until you hit the max!\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport Scoreboard from './Scoreboard';\r\nimport '../../styles/Header.css';\r\nimport Menu from '../Menu/Menu';\r\nimport InfoModal from './InfoModal'\r\n// Simply a header since scoreboard will be here we will need to pass state from another comp into props so we can pass to scoreboard\r\n\r\nexport default function Header (props){\r\n    const [info, setInfo] = useState(false);\r\n    const clickInfo = () =>  {\r\n        setInfo(!info);\r\n    }\r\n    return(\r\n        <>{info ? <InfoModal clickInfo={clickInfo} /> : null }\r\n        <div className='header'>\r\n            \r\n            <div className='top-row'>\r\n                <h2>Memory Game \r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" onClick={clickInfo} style={{position: 'static', marginLeft: '1rem'}} width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-info-square\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\r\n                    <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\r\n                </svg>\r\n                </h2>\r\n                <div className='menu-button'><Menu /></div>\r\n            </div>\r\n            <Scoreboard personalBest={props.personalBest} />\r\n        </div>\r\n        </>\r\n    )\r\n}","import Header from'./Header';\n\nimport React from 'react';\nexport default function Gameboard(props){\n    \n    return (\n    <div className=\"gameboard\">\n        <Header personalBest={props.personalBest} />\n    </div>\n    )\n}","import React from 'react';\nimport '../../styles/Character.css'\n// This function will be the character (image and name) we will nest each one inside styled cards\n\nexport default function Character (props){\n    return(\n        <div className='character-wrapper'>\n            <div className='image-wrapper'>\n                <img className='char-image' src={props.image} alt={props.alternative} />\n            </div>\n            <div>\n                <h3 className='char-header'>{props.charHead}</h3>\n            </div>\n            \n        </div>\n    )\n}","import React, { useState, useEffect, useContext } from 'react';\nimport Character from './Character';\nimport '../../styles/Card.css';\nimport Axios from 'axios';\nimport {ScoreContext} from '../../App'\nexport default function CardWrapper(props){\n    let cardsBaseCase = [{\n        capital: \"\",\n        name: \"\",\n        key: \"1\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"2\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"3\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"4\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"5\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"6\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"7\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"8\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"9\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"10\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"11\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"12\",\n        flag: \"\",\n        punc: ''\n    }]\n    const scoreContext = useContext(ScoreContext)\n\n    const { best, itemClicked} = props\n    \n    const [cards, setCards] = useState(cardsBaseCase)\n    let cardArray = [];\n    useEffect(() => {\n        console.log('useEffect')\n        \n        if(cardArray !== undefined){\n            let arr=[...cards];\n            let currentIndex = arr.length,  randomIndex;\n\n            while (currentIndex !== 0) {\n            \n                // Pick a remaining element.\n                randomIndex = Math.floor(Math.random() * currentIndex);\n                currentIndex--;\n            \n                // And swap it with the current element.\n                [arr[currentIndex], arr[randomIndex]] = [\n                  arr[randomIndex], arr[currentIndex]];\n            }\n            setCards(arr)\n        }\n        console.log('------------------------------')\n    },[scoreContext.scoreState, best])\n    useEffect(() => {\n        console.log('Mount')\n        getCountries()\n        console.log('------------------------------')\n    },[])\n    let tempArr = [];\n    let tempCountry = [];\n    function getCapitals(i) {\n        Axios.post('https://countriesnow.space/api/v0.1/countries/capital', {\n                \"country\": tempCountry[i].name\n            }).then(response => {\n                response.data.data.capital ? tempCountry[i].capital = response.data.data.capital :  tempCountry[i].capital = \"No defined capital\";\n                tempCountry[i].punc = \",\"\n                if (i === tempArr.length - 1){\n                    setTimeout(() => {\n                        console.log(tempCountry)\n                        cardArray = tempCountry\n                        setCards(tempCountry)\n                    }, 100)\n                    \n                }\n            }).catch(error => {console.log(error)});\n    }\n    const getCountries = () => {\n        setCards(cardsBaseCase)\n        Axios.get(\"https://countriesnow.space/api/v0.1/countries/flag/images\").then(\n            (response) => {\n                scoreContext.scoreDispatch({type: 'newGame'})\n                if (response.status === 200){\n                    tempArr = [];\n                    // Get countries name and thier flags\n                    for(let i = 0; i < 12; i++){\n                        let random = Math.floor(Math.random() * response.data.data.length)\n                        if (!tempArr.includes(random)){\n                            tempArr.push(random);\n                        }\n                        \n                    }\n                    console.log(tempArr)\n                    tempCountry = [];\n                    for(let i = 0; i < tempArr.length; i++){\n                        tempCountry.push(response.data.data[tempArr[i]]);\n                        tempCountry[i].key = i;\n                        getCapitals(i)\n                    }\n                }                \n            })\n            console.log('------------------------------')           \n    }\n    \n    \n    \n    return (\n        <>\n        <button onClick={getCountries} className='cust-btn'>Generate countries</button>\n        <section className='cards-wrapper'>\n            \n            {cards.map((card) =>(\n                <div className='memory-card' key={card.key} onClick={() => {itemClicked(card.key)}}>\n                        <Character  key={card.key} image={ card.flag } alternative={`${card.capital}${card.punc} ${card.name}`} charHead={`${card.capital}${card.punc} ${card.name}`} />\n                </div>\n                )\n            )}\n        </section>\n        </>\n    )\n}","import React, { useState, useContext } from 'react';\nimport '../../styles/Card.css';\nimport Gameboard from './Gameboard';\nimport CardWrapper from './CardWrapper';\nimport {ScoreContext} from '../../App'\n// This function will mostly exist as a compainer that we will nest characters inside and style accordingly\n\nexport default function Card(props){\n    const [clicked, modClicked] = useState([]);\n    const [personalBest, modBest] = useState(0);\n    \n\n    const scoreContext = useContext(ScoreContext);\n    console.log(scoreContext)\n    const itemClicked = (num) =>{\n        \n        \n        if(!clicked.includes(num)){\n            let tempArr = [...clicked]\n            tempArr.push(num)\n            modClicked(tempArr);\n            scoreContext.scoreDispatch({type: 'right'});\n        }else{\n            modClicked([])\n            if(scoreContext.scoreState > personalBest){\n                modBest(scoreContext.scoreState);\n            }\n            scoreContext.scoreDispatch({type: 'wrong'});\n        }\n    }\n    \n    return(\n    <>\n        <Gameboard personalBest={personalBest} />\n        <div>\n        <CardWrapper best={personalBest} itemClicked={itemClicked} />\n        </div>\n    </>\n    )\n}","import './App.css';\nimport Cards from './components/MemoryShuffle/Card';\nimport React, {useReducer} from 'react';\n\nexport const ScoreContext = React.createContext()\n\nconst baseScore = 0;\nconst scoreReducer = (state, action) => {\n  switch (action.type) {\n    case 'right':\n      return state + 1;\n    case 'wrong':\n      return baseScore;\n    case 'newGame':\n      return baseScore;\n    default: return state;\n  }\n}\n\n\nfunction App() {\n  const [score, dispatch] = useReducer(scoreReducer, baseScore)\n  return (\n    <ScoreContext.Provider value={{scoreState: score, scoreDispatch: dispatch}}>\n      <div className=\"App\">\n        <Cards />\n      </div>\n    </ScoreContext.Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport '../../styles/MemorySortStyles/sortchar.css';\n\nexport default function SortChar(props){\n    return (\n        <div className='sort-character-wrapper'>\n            <div className='sort-image-wrapper'>\n                <img className='sort-char-image' src={props.image} alt={props.alternative} />\n            </div>\n            <div>\n                <h3 className='sort-char-header'>{props.charHead}</h3>\n            </div>\n            \n        </div>\n    )\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../../styles/MemorySortStyles/finishModal.css'\nexport default function FinishModal(props){\n\n    return (\n        <div className={`win-modal ${props.status}`} role=\"dialog\" >\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content cust-modal\">\n                <div className=\"modal-header\">\n                  <h5 id=\"exampleModalLongTitle\">You Won!</h5>\n                  \n                </div>\n                <div className=\"modal-body\">\n                  You sorted the countries in the right order!\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"modal-btn\" onClick={() => \n                  {\n                    props.closeModal();\n                    props.restart();\n                  }} >Restart</button>\n                </div>\n              </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../../styles/MemorySortStyles/finishModal.css'\nexport default function FinishModal(props){\n    return (\n        <div className={`lost-modal text-center ${props.status}`} role=\"dialog\" >\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content cust-modal\">\n                <div className=\"modal-header \">\n                  <h5>You Lost!</h5>\n              \n                </div>\n                <div className=\"modal-body mb-3\">\n                  You did not order the countries correctly!\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"modal-btn\"  onClick={() => \n                  {\n                    props.closeModal();\n                    props.restart();\n                  }}  >Restart</button>\n                </div>\n              </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\r\n\r\nexport default function InfoModal(props){\r\n    console.log(props)\r\n    const styles = {\r\n        backdrop: {\r\n            height: '100%',\r\n            width: '100%',\r\n            backgroundColor: 'rgba(0, 0, 0, .5)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            position: 'fixed',\r\n            zIndex: 99,\r\n        },\r\n        modal: {\r\n            position: 'fixed',\r\n            zIndex: 100,\r\n            backgroundColor: 'white',\r\n            height: 'auto',\r\n            maxWidth: '50%',\r\n            padding: '.75rem',\r\n            border: '1px solid rgba(240, 46, 170)',\r\n            textAlign: 'center',\r\n        },\r\n        pText: {\r\n            fontSize: '1.1rem',\r\n        }\r\n    }\r\n    return(\r\n        <div style={styles.backdrop} onClick={() => {props.setInfo()}}>\r\n            <div style={styles.modal}>\r\n                <h2>Rules:</h2>\r\n                <p style={styles.pText}>Memorize the order of the countries before you start the game. Once you click the start button the country cards will shuffle,\r\n                    drag and drop the country cards into the correct order then click finish. You will be old if you won or lost at the top of the screen then restart and try again.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport FinishModal from './FinishModal';\nimport LostModal from './LostModal';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Menu from '../Menu/Menu';\nimport '../../styles/Menu/MenuContent.css';\nimport InfoModal from './InfoModal'\nexport default function SortHeader(props) {\n    const {newCards, ogOrder, shuffle} = props;\n    const [winStatus, setWinStatus] = useState('off');\n    const [lossStatus, setLossStatus] = useState('off');\n    const [info, setInfo] = useState();\n    function checkwinStatus(){\n        setWinStatus('win')\n        console.log({newCards});\n        console.log({ogOrder});\n        newCards.forEach((card, index)=>{\n            if (card.key !== ogOrder[index].key){\n                setWinStatus(\"off\")\n                setLossStatus(\"lost\")\n            }\n        })\n        \n        console.log(winStatus)\n    }\n    function closeModal(){\n        setWinStatus('off');\n        setLossStatus(\"off\");\n        document.querySelector('.submit-cards').classList.add('off');\n        document.querySelector('.shuffle-cards').classList.remove('off');\n        \n    }\n    const clickInfo = () => {\n        setInfo(!info);\n        console.log('called clickInfo')\n    }\n    return(\n        <div className='sort-header d-flex flex-column align-items-center mb-3'>\n            {info ? <InfoModal setInfo={setInfo} info={info} /> : null}\n            <h2 className=\"memory-sort-header mb-2\">Memory Sort\n            <svg xmlns=\"http://www.w3.org/2000/svg\" onClick={clickInfo} width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-info-square\" viewBox=\"0 0 16 16\">\n                <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n                <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n            </svg>\n            </h2>\n            <Menu />\n            <div className='sort-btn-container text-center'>\n                <button className=\"shuffle-cards cust-btn\" onClick={(e) => shuffle(e)}>Start</button>\n                <button className='submit-cards off cust-btn mb-3' data-toggle=\"modal\" data-target=\"#exampleModalCenter\" onClick={checkwinStatus}>Finished!</button>\n            </div>\n            <FinishModal restart={props.restart} closeModal={closeModal} status={winStatus}/>\n            <LostModal restart={props.restart} closeModal={closeModal} status={lossStatus}/>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport '../../styles/MemorySortStyles/sort.css';\nimport SortChar from \"./SortCharacter\";\nimport { DragDropContext, Droppable , Draggable } from 'react-beautiful-dnd'\nimport SortHeader from \"./SortHeader\";\nexport default function MemorySortComponent(props) {\n    const [cards, setCards] = useState([{}]);\n    const [ogOrder, setOgOrder] = useState([]);\n    const [newCards, setNewCards] = useState([{}]);\n    const [start, setStart] = useState(true);\n    let cardsBaseCase = [{\n        capital: \"\",\n        name: \"\",\n        key: \"1\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"2\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"3\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"4\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"5\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"6\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"7\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"8\",\n        flag: \"\",\n        punc: ''\n    }];\n    let tempArr = [];\n    let tempCountry = [];\n    useEffect(() => {\n        console.log('Mount')\n        getCountries()\n        console.log('------------------------------')\n    },[])\n    function getCapitals(i) {\n        Axios.post('https://countriesnow.space/api/v0.1/countries/capital', {\n                \"country\": tempCountry[i].name\n            }).then(response => {\n                response.data.data.capital ? tempCountry[i].capital = response.data.data.capital :  tempCountry[i].capital = \"None\";\n                tempCountry[i].punc = \",\"\n                if (i === tempArr.length - 1){\n                    setTimeout(() => {\n                        console.log(tempCountry)\n                        setCards(tempCountry)\n                    }, 100)\n                    \n                }\n            }).catch(error => {console.log(error)});\n    }\n    const getCountries = () => {\n        setCards(cardsBaseCase)\n        setStart(!start)\n        Axios.get(\"https://countriesnow.space/api/v0.1/countries/flag/images\").then(\n            (response) => {\n                if (response.status === 200){\n                    tempArr = [];\n                    // Get countries name and thier flags\n                    for(let i = 0; i < 8; i++){\n                        let random = Math.floor(Math.random() * response.data.data.length)\n                        if (!tempArr.includes(random)){\n                            tempArr.push(random);\n                        }\n                        \n                    }\n                    console.log(tempArr)\n                    tempCountry = [];\n                    for(let i = 0; i < tempArr.length; i++){\n                        tempCountry.push(response.data.data[tempArr[i]]);\n                        tempCountry[i].key = i;\n                        getCapitals(i)\n                    }\n                }                \n            })\n            console.log('------------------------------')           \n    }\n\n    function shuffle(e) {\n        setStart(true)\n        e.target.nextSibling.classList.remove('off')\n        e.target.classList.add('off')\n        setOgOrder(cards);\n        if(cards !== undefined){\n            let arr=[...cards];\n                let currentIndex = arr.length,  randomIndex;\n\n                while (currentIndex !== 0) {\n                \n                    // Pick a remaining element.\n                    randomIndex = Math.floor(Math.random() * currentIndex);\n                    currentIndex--;\n                \n                    // And swap it with the current element.\n                    [arr[currentIndex], arr[randomIndex]] = [\n                      arr[randomIndex], arr[currentIndex]];\n                }\n                setCards(arr);\n                \n        }\n    }\n    function handleOnDragEnd(result){\n        console.log(result);\n        if (!result.destination) return;\n\n        const items = Array.from(cards);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n        setCards(items)\n        setNewCards(items)\n    }\n\n    const gameStarted = (\n            <DragDropContext onDragEnd={handleOnDragEnd}>\n                <Droppable droppableId='grid-cell-sort'>\n                    {(provided) => \n                    (\n                        <ul {...provided.droppableProps} ref={provided.innerRef} className='grid-sort' >\n                        {cards.map((card, index) => {\n                            return(\n                                <Draggable key={card.key} draggableId={`${card.key}`} index={index}>\n                                    {(provided) => (\n                                        <div className='grid-cell-sort' key={card.key + 1} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                                            <SortChar  key={card.key + 2} image={ card.flag } alternative={`${card.capital}${card.punc} ${card.name}`} charHead={`${card.capital}${card.punc} ${card.name}`} />\n                                        </div> \n                                    )}\n                                     \n                                </Draggable>\n                            )\n                                    \n                            }\n                        )}\n                        {provided.placeholder}\n                        </ul>\n                    )\n                }\n                    \n                </Droppable>\n            </DragDropContext>\n        )\n    \n    const gameNotStarted = (\n        <ul className='grid-sort'>\n            {cards.map(card =>{\n                return (\n                <div className='grid-cell-sort' key={card.key + 1}>\n                    <SortChar  key={card.key + 2} image={ card.flag } alternative={`${card.capital}${card.punc} ${card.name}`} charHead={`${card.capital}${card.punc} ${card.name}`} />\n                </div> )\n            })}\n        </ul>\n    )\n    return (\n        <div className=\"memory-sort-container\">\n            <div className={'memory-sort-header'} >\n            <SortHeader restart={getCountries} shuffle={shuffle} newCards={newCards} ogOrder={ogOrder} setStart={setStart} />\n            </div>\n            {start ? gameStarted : gameNotStarted}\n\n        </div>\n    )\n}","import React from \"react\";\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport MemorySortComponent from \"./components/MemorySort/Sort\";\r\n\r\nconst RouteSwitch = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<App />} />\r\n        <Route path=\"/sort\" element={<MemorySortComponent />} />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default RouteSwitch;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport RouteSwitch from \"./RouteSwitch\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n//import App from \"./App\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n        <RouteSwitch />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}