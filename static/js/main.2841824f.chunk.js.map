{"version":3,"sources":["components/Scoreboard.js","components/Header.js","components/Gameboard.js","components/Character.js","components/CardWrapper.js","components/Card.js","App.js","components/MemorySort/SortCharacter.js","components/MemorySort/FinishModal.js","components/MemorySort/LostModal.js","components/MemorySort/SortHeader.js","components/MemorySort/Sort.js","RouteSwitch.js","reportWebVitals.js","index.js"],"names":["Scoreboard","props","react_default","a","createElement","className","score","personalBest","Header","dist","to","Scoreboard_Scoreboard","Gameboard","Header_Header","Character","src","image","alt","alternative","charHead","CardWrapper","cardsBaseCase","capital","name","key","flag","punc","best","itemClicked","_useState","useState","_useState2","Object","slicedToArray","cards","setCards","cardArray","useEffect","console","log","undefined","randomIndex","arr","toConsumableArray","currentIndex","length","Math","floor","random","_ref","getCountries","tempArr","tempCountry","getCapitals","i","Axios","post","country","then","response","data","setTimeout","catch","error","get","status","includes","push","Fragment","onClick","map","card","Character_Character","concat","Card","clicked","modClicked","_useState3","_useState4","modScore","_useState5","_useState6","modBest","num","App","Card_Card","SortChar","FinishModal","role","id","type","closeModal","aria-label","aria-hidden","restart","SortHeader","newCards","ogOrder","shuffle","winStatus","setWinStatus","lossStatus","setLossStatus","e","data-toggle","data-target","forEach","index","LostModal_FinishModal","MemorySortComponent","setOgOrder","setNewCards","target","nextSibling","classList","remove","add","react_beautiful_dnd_esm","onDragEnd","result","destination","items","Array","from","_items$splice","splice","source","reorderedItem","droppableId","provided","assign","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","RouteSwitch","basename","process","react_router_dist","exact","path","element","src_App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_RouteSwitch"],"mappings":"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","file":"static/js/main.2841824f.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Scoreboard.css';\n// This will be a scoreboard for current score/best score and max score we will need to track how many unique characters someone clicks \n// To track clicked possibly have a unique id for each card, each click we should check an array for that cards id and either end the game or add id to arr\n\nexport default function Scoreboard (props){\n    // pass on to props some state that tracks your score and the session best should be passed in from the component with all the cards in them \n    return(\n        <div className='scoreboard'>\n            <h4>Score: {props.score}</h4> \n            <h4>Personal Best: {props.personalBest}</h4>\n            <h4>Max: 12</h4>           \n        </div>\n    )\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Scoreboard from './Scoreboard';\r\nimport '../styles/Header.css';\r\n// Simply a header since scoreboard will be here we will need to pass state from another comp into props so we can pass to scoreboard\r\n\r\nexport default function Header (props){\r\n\r\n    return(\r\n        <div className='header'>\r\n            <h2 >Memory Game</h2>\r\n            <Link to='/sort'>\r\n                <li>Memory Sort</li>\r\n            </Link>\r\n            <Scoreboard score={props.score} personalBest={props.personalBest} />\r\n        </div>\r\n    )\r\n}","import Header from'./Header';\n\nimport React from 'react';\nexport default function Gameboard(props){\n    \n    return (\n    <div className=\"gameboard\">\n        <Header score={props.score} personalBest={props.personalBest} />\n    </div>\n    )\n}","import React from 'react';\nimport '../styles/Character.css'\n// This function will be the character (image and name) we will nest each one inside styled cards\n\nexport default function Character (props){\n    return(\n        <div className='character-wrapper'>\n            <div className='image-wrapper'>\n                <img className='char-image' src={props.image} alt={props.alternative} />\n            </div>\n            <div>\n                <h3 className='char-header'>{props.charHead}</h3>\n            </div>\n            \n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Character from './Character';\nimport '../styles/Card.css';\nimport Axios from 'axios';\n\nexport default function CardWrapper(props){\n    let cardsBaseCase = [{\n        capital: \"\",\n        name: \"\",\n        key: \"1\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"2\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"3\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"4\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"5\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"6\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"7\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"8\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"9\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"10\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"11\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"12\",\n        flag: \"\",\n        punc: ''\n    }]\n\n    const {score, best, itemClicked} = props\n    \n    const [cards, setCards] = useState(cardsBaseCase)\n    let cardArray = [];\n    useEffect(() => {\n        console.log('useEffect')\n        \n        if(cardArray !== undefined){\n            let arr=[...cards];\n            let currentIndex = arr.length,  randomIndex;\n\n            while (currentIndex !== 0) {\n            \n                // Pick a remaining element.\n                randomIndex = Math.floor(Math.random() * currentIndex);\n                currentIndex--;\n            \n                // And swap it with the current element.\n                [arr[currentIndex], arr[randomIndex]] = [\n                  arr[randomIndex], arr[currentIndex]];\n            }\n            setCards(arr)\n        }\n        console.log('------------------------------')\n    },[score, best])\n    useEffect(() => {\n        console.log('Mount')\n        getCountries()\n        console.log('------------------------------')\n    },[])\n    let tempArr = [];\n    let tempCountry = [];\n    function getCapitals(i) {\n        Axios.post('https://countriesnow.space/api/v0.1/countries/capital', {\n                \"country\": tempCountry[i].name\n            }).then(response => {\n                response.data.data.capital ? tempCountry[i].capital = response.data.data.capital :  tempCountry[i].capital = \"No defined capital\";\n                tempCountry[i].punc = \",\"\n                if (i === tempArr.length - 1){\n                    setTimeout(() => {\n                        console.log(tempCountry)\n                        cardArray = tempCountry\n                        setCards(tempCountry)\n                    }, 100)\n                    \n                }\n            }).catch(error => {console.log(error)});\n    }\n    const getCountries = () => {\n        setCards(cardsBaseCase)\n        Axios.get(\"https://countriesnow.space/api/v0.1/countries/flag/images\").then(\n            (response) => {\n                if (response.status === 200){\n                    tempArr = [];\n                    // Get countries name and thier flags\n                    for(let i = 0; i < 12; i++){\n                        let random = Math.floor(Math.random() * response.data.data.length)\n                        if (!tempArr.includes(random)){\n                            tempArr.push(random);\n                        }\n                        \n                    }\n                    console.log(tempArr)\n                    tempCountry = [];\n                    for(let i = 0; i < tempArr.length; i++){\n                        tempCountry.push(response.data.data[tempArr[i]]);\n                        tempCountry[i].key = i;\n                        getCapitals(i)\n                    }\n                }                \n            })\n            console.log('------------------------------')           \n    }\n    \n    \n    \n    return (\n        <>\n        <button onClick={getCountries} className='cust-btn'>Generate countries</button>\n        <section className='cards-wrapper'>\n            \n            {cards.map((card) =>(\n                <div className='memory-card' key={card.key} onClick={() => {itemClicked(card.key)}}>\n                        <Character  key={card.key} image={ card.flag } alternative={`${card.capital}${card.punc} ${card.name}`} charHead={`${card.capital}${card.punc} ${card.name}`} />\n                </div>\n                )\n            )}\n        </section>\n        </>\n    )\n}","import React, { useState } from 'react';\nimport '../styles/Card.css';\nimport Gameboard from './Gameboard';\nimport CardWrapper from './CardWrapper';\n// This function will mostly exist as a compainer that we will nest characters inside and style accordingly\n\nexport default function Card(props){\n    const [clicked, modClicked] = useState([]);\n    const [score, modScore] = useState(0)\n    const [personalBest, modBest] = useState(0);\n    \n    const itemClicked = (num) =>{\n        \n        \n        if(!clicked.includes(num)){\n            let tempArr = [...clicked]\n            tempArr.push(num)\n            modClicked(tempArr);\n            modScore(score + 1);\n        }else{\n            modClicked([])\n            if(score > personalBest){\n                modBest(score);\n            }\n            modScore(0)\n        }\n    }\n    \n    return(\n    <>\n        <Gameboard score={score} personalBest={personalBest} />\n        <div>\n        <CardWrapper score={score} best={personalBest} itemClicked={itemClicked}/>\n        </div>\n    </>\n    )\n}","import './App.css';\nimport Cards from './components/Card';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cards />\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport '../../styles/MemorySortStyles/sortchar.css';\n\nexport default function SortChar(props){\n    return (\n        <div className='sort-character-wrapper'>\n            <div className='sort-image-wrapper'>\n                <img className='sort-char-image' src={props.image} alt={props.alternative} />\n            </div>\n            <div>\n                <h3 className='sort-char-header'>{props.charHead}</h3>\n            </div>\n            \n        </div>\n    )\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../../styles/MemorySortStyles/finishModal.css'\nexport default function FinishModal(props){\n\n    return (\n        <div className={`win-modal ${props.status}`} role=\"dialog\" >\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content cust-modal\">\n                <div className=\"modal-header\">\n                  <h5 id=\"exampleModalLongTitle\">You Won!</h5>\n                  <button type=\"button\" className=\"modal-btn\" onClick={props.closeModal} aria-label=\"Close\">\n                    <span aria-hidden=\"true\">x</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  You sorted the countries in the right order!\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"modal-btn\" onClick={() => \n                  {\n                    props.closeModal();\n                    props.restart();\n                  }} >Restart</button>\n                </div>\n              </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../../styles/MemorySortStyles/finishModal.css'\nexport default function FinishModal(props){\n    return (\n        <div className={`lost-modal ${props.status}`} role=\"dialog\" >\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content cust-modal\">\n                <div className=\"modal-header text-center\">\n                  <h5 id=\"exampleModalLongTitle\">You Lost!</h5>\n                  <button type=\"button\" className=\"modal-btn\"  onClick={props.closeModal} aria-label=\"Close\">\n                    <span>x</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  You did not order the countries correctly!\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"modal-btn\"  onClick={() => \n                  {\n                    props.closeModal();\n                    props.restart();\n                  }}  >Restart</button>\n                </div>\n              </div>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport FinishModal from './FinishModal';\nimport LostModal from './LostModal';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Link } from 'react-router-dom';\n\nexport default function SortHeader(props) {\n    const {newCards, ogOrder, shuffle} = props;\n    const [winStatus, setWinStatus] = useState('off');\n    const [lossStatus, setLossStatus] = useState('off');\n    function checkwinStatus(){\n        setWinStatus('win')\n        console.log({newCards});\n        console.log({ogOrder});\n        newCards.forEach((card, index)=>{\n            if (card.key !== ogOrder[index].key){\n                setWinStatus(\"off\")\n                setLossStatus(\"lost\")\n            }\n        })\n        \n        console.log(winStatus)\n    }\n    function closeModal(){\n        setWinStatus('off')\n        setLossStatus(\"off\")\n    }\n    return(\n        <div className='sort-header d-flex flex-column align-items-center mb-3'>\n            <h2 className=\"memory-sort-header mb-2\">Memory Sort</h2>\n            <Link to='/'>\n                <li className='mb-2'>Memory Shuffle</li>\n            </Link>\n            <div className='sort-btn-container text-center'>\n                <button className=\"shuffle-cards cust-btn\" onClick={(e) => shuffle(e)}>Start</button>\n                <button className='submit-cards off cust-btn' data-toggle=\"modal\" data-target=\"#exampleModalCenter\" onClick={checkwinStatus}>Finished!</button>\n            </div>\n            <FinishModal restart={props.restart} closeModal={closeModal} status={winStatus}/>\n            <LostModal restart={props.restart} closeModal={closeModal} status={lossStatus}/>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport '../../styles/MemorySortStyles/sort.css';\nimport SortChar from \"./SortCharacter\";\nimport { DragDropContext, Droppable , Draggable } from 'react-beautiful-dnd'\nimport SortHeader from \"./SortHeader\";\nexport default function MemorySortComponent(props) {\n    const [cards, setCards] = useState([{}]);\n    const [ogOrder, setOgOrder] = useState([]);\n    const [newCards, setNewCards] = useState([{}]);\n    let cardsBaseCase = [{\n        capital: \"\",\n        name: \"\",\n        key: \"1\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"2\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"3\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"4\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"5\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"6\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"7\",\n        flag: \"\",\n        punc: ''\n    },\n    {\n        capital: \"\",\n        name: \"\",\n        key: \"8\",\n        flag: \"\",\n        punc: ''\n    }];\n    let tempArr = [];\n    let tempCountry = [];\n    useEffect(() => {\n        console.log('Mount')\n        getCountries()\n        console.log('------------------------------')\n    },[])\n    function getCapitals(i) {\n        Axios.post('https://countriesnow.space/api/v0.1/countries/capital', {\n                \"country\": tempCountry[i].name\n            }).then(response => {\n                response.data.data.capital ? tempCountry[i].capital = response.data.data.capital :  tempCountry[i].capital = \"None\";\n                tempCountry[i].punc = \",\"\n                if (i === tempArr.length - 1){\n                    setTimeout(() => {\n                        console.log(tempCountry)\n                        setCards(tempCountry)\n                    }, 100)\n                    \n                }\n            }).catch(error => {console.log(error)});\n    }\n    const getCountries = () => {\n        setCards(cardsBaseCase)\n        Axios.get(\"https://countriesnow.space/api/v0.1/countries/flag/images\").then(\n            (response) => {\n                if (response.status === 200){\n                    tempArr = [];\n                    // Get countries name and thier flags\n                    for(let i = 0; i < 8; i++){\n                        let random = Math.floor(Math.random() * response.data.data.length)\n                        if (!tempArr.includes(random)){\n                            tempArr.push(random);\n                        }\n                        \n                    }\n                    console.log(tempArr)\n                    tempCountry = [];\n                    for(let i = 0; i < tempArr.length; i++){\n                        tempCountry.push(response.data.data[tempArr[i]]);\n                        tempCountry[i].key = i;\n                        getCapitals(i)\n                    }\n                }                \n            })\n            console.log('------------------------------')           \n    }\n\n    function shuffle(e) {\n        \n        e.target.nextSibling.classList.remove('off')\n        e.target.classList.add('off')\n        setOgOrder(cards);\n        if(cards !== undefined){\n            let arr=[...cards];\n                let currentIndex = arr.length,  randomIndex;\n\n                while (currentIndex !== 0) {\n                \n                    // Pick a remaining element.\n                    randomIndex = Math.floor(Math.random() * currentIndex);\n                    currentIndex--;\n                \n                    // And swap it with the current element.\n                    [arr[currentIndex], arr[randomIndex]] = [\n                      arr[randomIndex], arr[currentIndex]];\n                }\n                setCards(arr);\n                \n        }\n    }\n    function handleOnDragEnd(result){\n        console.log(result);\n        if (!result.destination) return;\n\n        const items = Array.from(cards);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n        setCards(items)\n        setNewCards(items)\n    }\n\n    return (\n        <div className=\"memory-sort-container\">\n            <div className={'memory-sort-header'} >\n            <SortHeader restart={getCountries} shuffle={shuffle} newCards={newCards} ogOrder={ogOrder} />\n            </div>\n            <DragDropContext onDragEnd={handleOnDragEnd}>\n                <Droppable droppableId='grid-cell-sort'>\n                    {(provided) => \n                    (\n                        \n                            <ul {...provided.droppableProps} ref={provided.innerRef} className='grid-sort' >\n                            {cards.map((card, index) => {\n                                return(\n                                    <Draggable key={card.key} draggableId={`${card.key}`} index={index}>\n                                        {(provided) => (\n                                            <div className='grid-cell-sort' key={card.key + 1} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                                                <SortChar  key={card.key + 2} image={ card.flag } alternative={`${card.capital}${card.punc} ${card.name}`} charHead={`${card.capital}${card.punc} ${card.name}`} />\n                                            </div> \n                                        )}\n                                         \n                                    </Draggable>\n                                )\n                                \n                                }\n                            )}\n                            {provided.placeholder}\n                            </ul>\n                    )\n                }\n                    \n                </Droppable>\n            </DragDropContext>\n\n        </div>\n    )\n}","import React from \"react\";\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport MemorySortComponent from \"./components/MemorySort/Sort\";\r\n\r\nconst RouteSwitch = () => {\r\n  return (\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<App />} />\r\n        <Route exact path=\"/sort\" element={<MemorySortComponent />} />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default RouteSwitch;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport RouteSwitch from \"./RouteSwitch\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n//import App from \"./App\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n        <RouteSwitch />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}