{"version":3,"sources":["media/japan.jpg","media/czech.jpg","media/france.jpg","media/italy.jpg","media/newzealand.jpg","media/norway.jpg","media/poland.jpg","media/spain.jpg","media/sweeden.jpg","media/switzerland.jpg","media/ukraine.jpg","media/UnitedKingdom.jpg","components/Scoreboard.js","components/Header.js","components/Gameboard.js","components/Character.js","components/CardWrapper.js","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Scoreboard","props","react_default","a","createElement","className","score","personalBest","Header","Scoreboard_Scoreboard","Gameboard","Header_Header","Character","src","image","alt","alternative","charHead","CardWrapper","best","itemClicked","cardArray","key","onClick","Character_Character","require","_useState","useState","_useState2","Object","slicedToArray","cards","modCards","useEffect","console","log","randomIndex","arr","concat","currentIndex","length","Math","floor","random","_ref","Card","clicked","modClicked","_useState3","_useState4","modScore","_useState5","_useState6","modBest","Fragment","num","includes","tempArr","toConsumableArray","push","App","Card_Card","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"0OAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0JCKzB,SAASC,EAAYC,GAEhC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAI,UAAQH,EAAMK,OAClBJ,EAAAC,EAAAC,cAAA,UAAI,kBAAgBH,EAAMM,cAC1BL,EAAAC,EAAAC,cAAA,UAAI,kBCND,SAASI,EAAQP,GAE5B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAI,eACJF,EAAAC,EAAAC,cAACK,EAAU,CAACH,MAAOL,EAAMK,MAAOC,aAAcN,EAAMM,gBCPjD,SAASG,EAAUT,GAE9B,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACO,EAAM,CAACL,MAAOL,EAAMK,MAAOC,aAAcN,EAAMM,sBCHzC,SAASK,EAAWX,GAC/B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaQ,IAAKZ,EAAMa,MAAOC,IAAKd,EAAMe,eAE7Dd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeJ,EAAMgB,YCPpC,SAASC,EAAYjB,GAAM,IAC/BK,EAA4BL,EAA5BK,MAAOa,EAAqBlB,EAArBkB,KAAMC,EAAenB,EAAfmB,YAChBC,EAAW,CACX,CAAEnB,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,IAAIC,QAAS,WAAOH,EAAY,IAAKf,UAAU,QACtDH,EAAAC,EAAAC,cAACoB,EAAS,CAAEF,IAAI,IAAIR,MAAOW,EAAQ,IAAuBT,YAAY,QAAQC,SAAS,mBAE3F,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,IAAIC,QAAS,WAAOH,EAAY,IAAKf,UAAU,QACtDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,IAAIR,MAAOW,EAAQ,IAAuBT,YAAY,SAASC,SAAS,oBAE3F,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,IAAIC,QAAS,WAAOH,EAAY,IAAKf,UAAU,QACtDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,IAAIR,MAAOW,EAAQ,IAAwBT,YAAY,QAAQC,SAAS,oBAE3F,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,IAAIC,QAAS,WAAOH,EAAY,IAAKf,UAAU,QACtDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,IAAIR,MAAOW,EAAQ,IAAuBT,YAAY,OAAOC,SAAS,kBAEzF,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,IAAIC,QAAS,WAAOH,EAAY,IAAKf,UAAU,QACtDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,IAAIR,MAAOW,EAAQ,IAA4BT,YAAY,aAAaC,SAAS,8BAEpG,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,IAAIC,QAAS,WAAOH,EAAY,IAAKf,UAAU,QACtDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,IAAIR,MAAOW,EAAQ,IAAwBT,YAAY,OAAOC,SAAS,mBAE1F,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,IAAIC,QAAS,WAAOH,EAAY,IAAKf,UAAU,QACtDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,IAAIR,MAAOW,EAAQ,IAAwBT,YAAY,SAASC,SAAS,qBAE5F,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,IAAIC,QAAS,WAAOH,EAAY,IAAKf,UAAU,QACtDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,IAAIR,MAAOW,EAAQ,IAAuBT,YAAY,SAASC,SAAS,oBAE3F,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,IAAIC,QAAS,WAAOH,EAAY,IAAKf,UAAU,QACtDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,IAAIR,MAAOW,EAAQ,IAAyBT,YAAY,YAAYC,SAAS,yBAEhG,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,KAAKC,QAAS,WAAOH,EAAY,KAAMf,UAAU,QACxDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,KAAKR,MAAOW,EAAQ,IAA6BT,YAAY,OAAOC,SAAS,wBAEhG,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,KAAKC,QAAS,WAAOH,EAAY,KAAMf,UAAU,QACxDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,KAAKR,MAAOW,EAAQ,IAAyBT,YAAY,OAAOC,SAAS,oBAE5F,CAAEf,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,KAAKC,QAAS,WAAOH,EAAY,KAAMf,UAAU,QACxDH,EAAAC,EAAAC,cAACoB,EAAS,CAACF,IAAI,KAAKR,MAAOW,EAAQ,IAA+BT,YAAY,SAASC,SAAS,8BAEtGS,EACwBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA/BK,EAAKH,EAAA,GAAEI,EAAQJ,EAAA,GAsBtB,OArBAK,oBAAU,WACNC,QAAQC,IAAI,aAIZ,IAHA,IACgCC,EAD5BC,EAAG,GAAAC,OAAKjB,GACRkB,EAAeF,EAAIG,OAEC,IAAjBD,GAAoB,CAGvBH,EAAcK,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,IAEA,IAAAK,EACwC,CACtCP,EAAID,GAAcC,EAAIE,IADvBF,EAAIE,GAAaK,EAAA,GAAEP,EAAID,GAAYQ,EAAA,GAGxCV,QAAQC,IAAI,SAASE,GACrBL,EAASK,GACTH,QAAQC,IAAI,UAAWd,GACvBa,QAAQC,IAAI,2CACd,CAAC7B,EAAOa,IAGNjB,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBACd0B,GC9DE,SAASc,EAAK5C,GAAM,IAAAyB,EACDC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAnCoB,EAAOlB,EAAA,GAAEmB,EAAUnB,EAAA,GAAAoB,EACArB,mBAAS,GAAEsB,EAAApB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,GAA9B1C,EAAK2C,EAAA,GAAEC,EAAQD,EAAA,GAAAE,EACUxB,mBAAS,GAAEyB,EAAAvB,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GAApC5C,EAAY6C,EAAA,GAAEC,EAAOD,EAAA,GAmB5B,OACAlD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmD,SAAA,KACIpD,EAAAC,EAAAC,cAACM,EAAS,CAACJ,MAAOA,EAAOC,aAAcA,IACvCL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACc,EAAW,CAACZ,MAAOA,EAAOa,KAAMZ,EAAca,YArB/B,SAACmC,GAGjB,GAAIT,EAAQU,SAASD,GAMjBR,EAAW,IACRzC,EAAQC,GACP8C,EAAQ/C,GAEZ4C,EAAS,OAVa,CACtB,IAAIO,EAAO5B,OAAA6B,EAAA,EAAA7B,CAAOiB,GAClBW,EAAQE,KAAKJ,GACbR,EAAWU,GACXP,EAAS5C,EAAQ,SCLdsD,MATf,WACE,OACE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyD,EAAK,QCKGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxClE,EAAAmE,EAAA,GAAAC,KAAApE,EAAAqE,KAAA,UAAqBD,KAAK,SAAAtB,GAAiD,IAA9CwB,EAAMxB,EAANwB,OAAQC,EAAMzB,EAANyB,OAAQC,EAAM1B,EAAN0B,OAAQC,EAAM3B,EAAN2B,OAAQC,EAAO5B,EAAP4B,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3E,EAAAC,EAAAC,cAACF,EAAAC,EAAM2E,WAAU,KACf5E,EAAAC,EAAAC,cAAC2E,EAAG,QAORjB","file":"static/js/main.5aa3083d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/japan.29a6f0aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/czech.6ad38896.jpg\";","module.exports = __webpack_public_path__ + \"static/media/france.9de2d67e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/italy.b0e91a9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/newzealand.1b9a8eac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/norway.e197cd0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/poland.b633d5a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spain.889882fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sweeden.21e330c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/switzerland.f25d44b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ukraine.0faaf9cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/UnitedKingdom.ec2c682b.jpg\";","import React from 'react';\r\nimport '../styles/Scoreboard.css';\r\n// This will be a scoreboard for current score/best score and max score we will need to track how many unique characters someone clicks \r\n// To track clicked possibly have a unique id for each card, each click we should check an array for that cards id and either end the game or add id to arr\r\n\r\nexport default function Scoreboard (props){\r\n    // pass on to props some state that tracks your score and the session best should be passed in from the component with all the cards in them \r\n    return(\r\n        <div className='scoreboard'>\r\n            <h4>Score: {props.score}</h4> \r\n            <h4>Personal Best: {props.personalBest}</h4>\r\n            <h4>Max: 12</h4>           \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Scoreboard from './Scoreboard';\r\nimport '../styles/Header.css';\r\n// Simply a header since scoreboard will be here we will need to pass state from another comp into props so we can pass to scoreboard\r\n\r\nexport default function Header (props){\r\n\r\n    return(\r\n        <div className='header'>\r\n            <h2>Memory Game</h2>\r\n            <Scoreboard score={props.score} personalBest={props.personalBest} />\r\n        </div>\r\n    )\r\n}","import Header from'./Header';\r\n\r\nimport React from 'react';\r\nexport default function Gameboard(props){\r\n    \r\n    return (\r\n    <div className=\"gameboard\">\r\n        <Header score={props.score} personalBest={props.personalBest} />\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport '../styles/Character.css'\r\n// This function will be the character (image and name) we will nest each one inside styled cards\r\n\r\nexport default function Character (props){\r\n    return(\r\n        <div className='character-wrapper'>\r\n            <div className='image-wrapper'>\r\n                <img className='char-image' src={props.image} alt={props.alternative} />\r\n            </div>\r\n            <div>\r\n                <h3 className='char-header'>{props.charHead}</h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Character from './Character';\r\nimport '../styles/Card.css';\r\n\r\nexport default function CardWrapper(props){\r\n    const {score, best, itemClicked} = props\r\n    let cardArray =[\r\n        [(<div key='1' onClick={() => {itemClicked(1)}} className='card'>\r\n            <Character  key='1' image={require('../media/japan.jpg')} alternative='Tokyo' charHead='Tokyo, Japan'/>\r\n        </div>)],\r\n        [(<div key='2' onClick={() => {itemClicked(2)}} className='card'>\r\n            <Character key='2' image={require('../media/czech.jpg')} alternative='Prague' charHead='Prague, Czech'/>\r\n        </div>)],\r\n        [(<div key='3' onClick={() => {itemClicked(3)}} className='card'>\r\n            <Character key='3' image={require('../media/france.jpg')} alternative='Paris' charHead='Paris, France'/>\r\n        </div>)],\r\n        [(<div key='4' onClick={() => {itemClicked(4)}} className='card'>\r\n            <Character key='4' image={require('../media/italy.jpg')} alternative='Rome' charHead='Rome, Italy'/>\r\n        </div>)],\r\n        [(<div key='5' onClick={() => {itemClicked(5)}} className='card'>\r\n            <Character key='5' image={require('../media/newzealand.jpg')} alternative='Wellington' charHead='Wellington, New Zealand'/>\r\n        </div>)],\r\n        [(<div key='6' onClick={() => {itemClicked(6)}} className='card'>\r\n            <Character key='6' image={require('../media/norway.jpg')} alternative='Oslo' charHead='Oslo, Norway'/>\r\n        </div>)],\r\n        [(<div key='7' onClick={() => {itemClicked(7)}} className='card'>\r\n            <Character key='7' image={require('../media/poland.jpg')} alternative='Warsaw' charHead='Warsaw, Poland'/>\r\n        </div>)],\r\n        [(<div key='8' onClick={() => {itemClicked(8)}} className='card'>\r\n            <Character key='8' image={require('../media/spain.jpg')} alternative='Madrid' charHead='Madrid, Spain'/>\r\n        </div>)],\r\n        [(<div key='9' onClick={() => {itemClicked(9)}} className='card'>\r\n            <Character key='9' image={require('../media/sweeden.jpg')} alternative='Stockholm' charHead='Stockholm, Sweeden'/>\r\n        </div>)],\r\n        [(<div key='10' onClick={() => {itemClicked(10)}} className='card'>\r\n            <Character key='10' image={require('../media/switzerland.jpg')} alternative='Bern' charHead='Bern, Switzerland'/>\r\n        </div>)],\r\n        [(<div key='11' onClick={() => {itemClicked(11)}} className='card'>\r\n            <Character key='11' image={require('../media/ukraine.jpg')} alternative='Kiev' charHead='Kiev, Ukraine'/>\r\n        </div>)],\r\n        [(<div key='12' onClick={() => {itemClicked(12)}} className='card'>\r\n            <Character key='12' image={require('../media/UnitedKingdom.jpg')} alternative='London' charHead='London, United Kingdom'/>\r\n        </div>)] \r\n    ];\r\n    const [cards, modCards] = useState([])\r\n    useEffect(() => {\r\n        console.log('useEffect')\r\n        let arr=[...cardArray];\r\n        let currentIndex = arr.length,  randomIndex;\r\n\r\n        while (currentIndex !== 0) {\r\n      \r\n            // Pick a remaining element.\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n        \r\n            // And swap it with the current element.\r\n            [arr[currentIndex], arr[randomIndex]] = [\r\n              arr[randomIndex], arr[currentIndex]];\r\n          }\r\n        console.log('newArr',arr)\r\n        modCards(arr)\r\n        console.log('cardArr', cardArray)\r\n        console.log('--------------------------------------')\r\n    },[score, best])\r\n\r\n    return (\r\n        <section className='cards-wrapper'>\r\n            {cards}\r\n        </section>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport '../styles/Card.css';\r\nimport Gameboard from './Gameboard';\r\nimport CardWrapper from './CardWrapper';\r\n// This function will mostly exist as a compainer that we will nest characters inside and style accordingly\r\n\r\nexport default function Card(props){\r\n    const [clicked, modClicked] = useState([]);\r\n    const [score, modScore] = useState(0)\r\n    const [personalBest, modBest] = useState(0);\r\n    \r\n    const itemClicked = (num) =>{\r\n        \r\n        \r\n        if(!clicked.includes(num)){\r\n            let tempArr = [...clicked]\r\n            tempArr.push(num)\r\n            modClicked(tempArr);\r\n            modScore(score + 1);\r\n        }else{\r\n            modClicked([])\r\n            if(score > personalBest){\r\n                modBest(score);\r\n            }\r\n            modScore(0)\r\n        }\r\n    }\r\n    \r\n    return(\r\n    <>\r\n        <Gameboard score={score} personalBest={personalBest} />\r\n        <div>\r\n        <CardWrapper score={score} best={personalBest} itemClicked={itemClicked}/>\r\n        </div>\r\n    </>\r\n    )\r\n}","import './App.css';\nimport Cards from './components/Card';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cards />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}