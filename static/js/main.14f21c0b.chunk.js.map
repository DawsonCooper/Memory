{"version":3,"sources":["media/japan.jpg","media/czech.jpg","media/france.jpg","media/italy.jpg","media/newzealand.jpg","media/norway.jpg","media/poland.jpg","media/spain.jpg","media/sweeden.jpg","media/switzerland.jpg","media/ukraine.jpg","media/UnitedKingdom.jpg","components/Scoreboard.js","components/Header.js","components/Gameboard.js","components/Character.js","components/CardWrapper.js","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Scoreboard","props","react_default","a","createElement","className","score","personalBest","Header","Scoreboard_Scoreboard","Gameboard","Header_Header","Character","src","image","alt","alternative","charHead","CardWrapper","best","itemClicked","cardArray","key","require","_useState","useState","_useState2","Object","slicedToArray","cards","modCards","useEffect","console","log","randomIndex","arr","concat","currentIndex","length","Math","floor","random","_ref","map","card","onClick","Character_Character","Card","clicked","modClicked","_useState3","_useState4","modScore","_useState5","_useState6","modBest","Fragment","num","includes","tempArr","toConsumableArray","push","App","Card_Card","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.14f21c0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/japan.29a6f0aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/czech.6ad38896.jpg\";","module.exports = __webpack_public_path__ + \"static/media/france.9de2d67e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/italy.b0e91a9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/newzealand.1b9a8eac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/norway.e197cd0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/poland.b633d5a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spain.889882fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sweeden.21e330c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/switzerland.f25d44b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ukraine.0faaf9cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/UnitedKingdom.ec2c682b.jpg\";","import React from 'react';\r\nimport '../styles/Scoreboard.css';\r\n// This will be a scoreboard for current score/best score and max score we will need to track how many unique characters someone clicks \r\n// To track clicked possibly have a unique id for each card, each click we should check an array for that cards id and either end the game or add id to arr\r\n\r\nexport default function Scoreboard (props){\r\n    // pass on to props some state that tracks your score and the session best should be passed in from the component with all the cards in them \r\n    return(\r\n        <div className='scoreboard'>\r\n            <h4>Score: {props.score}</h4> \r\n            <h4>Personal Best: {props.personalBest}</h4>\r\n            <h4>Max: 12</h4>           \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Scoreboard from './Scoreboard';\r\nimport '../styles/Header.css';\r\n// Simply a header since scoreboard will be here we will need to pass state from another comp into props so we can pass to scoreboard\r\n\r\nexport default function Header (props){\r\n\r\n    return(\r\n        <div className='header'>\r\n            <h2>Memory Game</h2>\r\n            <Scoreboard score={props.score} personalBest={props.personalBest} />\r\n        </div>\r\n    )\r\n}","import Header from'./Header';\r\n\r\nimport React from 'react';\r\nexport default function Gameboard(props){\r\n    \r\n    return (\r\n    <div className=\"gameboard\">\r\n        <Header score={props.score} personalBest={props.personalBest} />\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport '../styles/Character.css'\r\n// This function will be the character (image and name) we will nest each one inside styled cards\r\n\r\nexport default function Character (props){\r\n    return(\r\n        <div className='character-wrapper'>\r\n            <div className='image-wrapper'>\r\n                <img className='char-image' src={props.image} alt={props.alternative} />\r\n            </div>\r\n            <div>\r\n                <h3 className='char-header'>{props.charHead}</h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Character from './Character';\r\nimport '../styles/Card.css';\r\n\r\nexport default function CardWrapper(props){\r\n    const {score, best, itemClicked} = props\r\n    let cardArray =[\r\n        {\r\n            key: '1',\r\n            image: require('../media/japan.jpg'),\r\n            alt: 'Tokyo',\r\n            charHead: 'Tokyo, Japan'\r\n        },\r\n        {\r\n            key: '2',\r\n            image: require('../media/czech.jpg'),\r\n            alt: 'Prague',\r\n            charHead: 'Prague, Czech'\r\n        },\r\n        {\r\n            key: '3',\r\n            image: require('../media/france.jpg'),\r\n            alt: 'Paris',\r\n            charHead: 'Paris, France'\r\n        },\r\n        {\r\n            key: '4',\r\n            image: require('../media/italy.jpg'),\r\n            alt: 'Rome',\r\n            charHead: 'Rome, Italy'\r\n        },\r\n        {\r\n            key: '5',\r\n            image: require('../media/newzealand.jpg'),\r\n            alt: 'Wellington',\r\n            charHead: 'Wellington, New Zealand'\r\n        },\r\n        {\r\n            key: '6',\r\n            image: require('../media/norway.jpg'),\r\n            alt: 'Oslo',\r\n            charHead: 'Oslo, Norway'\r\n        },\r\n        {\r\n            key: '7',\r\n            image: require('../media/poland.jpg'),\r\n            alt: 'Warsaw',\r\n            charHead: 'Warsaw, Poland'\r\n        },\r\n        {\r\n            key: '8',\r\n            image: require('../media/spain.jpg'),\r\n            alt: 'Madrid',\r\n            charHead: 'Madrid, Spain'\r\n        },\r\n        {\r\n            key: '9',\r\n            image: require('../media/sweeden.jpg'),\r\n            alt: 'Stockholm',\r\n            charHead: 'Stockholm, Sweeden'\r\n        },\r\n        {\r\n            key: '10',\r\n            image: require('../media/switzerland.jpg'),\r\n            alt: 'Bern',\r\n            charHead: 'Bern, Switzerland'\r\n        },\r\n        {\r\n            key: '11',\r\n            image: require('../media/ukraine.jpg'),\r\n            alt: 'Kiev',\r\n            charHead: 'Kiev, Ukraine'\r\n        },\r\n        {\r\n            key: '12',\r\n            image: require('../media/UnitedKingdom.jpg'),\r\n            alt: 'London',\r\n            charHead: 'London, United Kingdom'\r\n        }\r\n    ];\r\n    const [cards, modCards] = useState([])\r\n    useEffect(() => {\r\n        console.log('useEffect')\r\n        let arr=[...cardArray];\r\n        let currentIndex = arr.length,  randomIndex;\r\n\r\n        while (currentIndex !== 0) {\r\n      \r\n            // Pick a remaining element.\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n        \r\n            // And swap it with the current element.\r\n            [arr[currentIndex], arr[randomIndex]] = [\r\n              arr[randomIndex], arr[currentIndex]];\r\n          }\r\n        console.log('newArr',arr)\r\n        modCards(arr)\r\n        console.log('cardArr', cardArray)\r\n        console.log('--------------------------------------')\r\n    },[score, best])\r\n    return (\r\n        <section className='cards-wrapper'>\r\n            {cards.map((card) =>(\r\n                <div className='card' key={card.key} onClick={() => {itemClicked(card.key)}}>\r\n                        <Character  key={card.key} image={ card.image } alternative={card.alt} charHead={card.charHead} />\r\n                </div>\r\n                )\r\n            )}\r\n        </section>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport '../styles/Card.css';\r\nimport Gameboard from './Gameboard';\r\nimport CardWrapper from './CardWrapper';\r\n// This function will mostly exist as a compainer that we will nest characters inside and style accordingly\r\n\r\nexport default function Card(props){\r\n    const [clicked, modClicked] = useState([]);\r\n    const [score, modScore] = useState(0)\r\n    const [personalBest, modBest] = useState(0);\r\n    \r\n    const itemClicked = (num) =>{\r\n        \r\n        \r\n        if(!clicked.includes(num)){\r\n            let tempArr = [...clicked]\r\n            tempArr.push(num)\r\n            modClicked(tempArr);\r\n            modScore(score + 1);\r\n        }else{\r\n            modClicked([])\r\n            if(score > personalBest){\r\n                modBest(score);\r\n            }\r\n            modScore(0)\r\n        }\r\n    }\r\n    \r\n    return(\r\n    <>\r\n        <Gameboard score={score} personalBest={personalBest} />\r\n        <div>\r\n        <CardWrapper score={score} best={personalBest} itemClicked={itemClicked}/>\r\n        </div>\r\n    </>\r\n    )\r\n}","import './App.css';\nimport Cards from './components/Card';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cards />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}